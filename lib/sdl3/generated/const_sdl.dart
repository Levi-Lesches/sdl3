// THIS FILE IS GENERATED AUTOMATICALLY AND SHOULD NOT BE EDITED DIRECTLY.
// ignore_for_file: constant_identifier_names
//const SDL_h_ = ;
//const SDL_assert_h_ = ;
//const SDL_ASSERT_LEVEL = SDL_DEFAULT_ASSERT_LEVEL;
//const SDL_TriggerBreakpoint = () __debugbreak();
//const SDL_FUNCTION = __func__;
//const SDL_FILE = __FILE__;
//const SDL_LINE = __LINE__;
//const SDL_NULL_WHILE_LOOP_CONDITION = (0,0);
//const SDL_disabled_assert = (condition) do { (void) sizeof ((condition)); } while (SDL_NULL_WHILE_LOOP_CONDITION);
const SDL_ASSERTION_RETRY = 0;
const SDL_ASSERTION_BREAK = 1;
const SDL_ASSERTION_ABORT = 2;
const SDL_ASSERTION_IGNORE = 3;
const SDL_ASSERTION_ALWAYS_IGNORE = 4;
//const SDL_AssertBreakpoint = ();
//const SDL_enabled_assert = (condition) do { while ( !(condition) ) { static struct SDL_AssertData sdl_assert_data = { 0, 0, #condition, 0, 0, 0, 0 }; const SDL_AssertState sdl_assert_state = SDL_ReportAssertion(&sdl_assert_data, SDL_FUNCTION, SDL_FILE, SDL_LINE); if (sdl_assert_state == SDL_ASSERTION_RETRY) { continue; } } while (SDL_NULL_WHILE_LOOP_CONDITION);
//const SDL_assert = (condition) SDL_disabled_assert(condition);
//const SDL_assert_release = (condition) SDL_disabled_assert(condition);
//const SDL_assert_paranoid = (condition) SDL_disabled_assert(condition);
//const SDL_assert_always = (condition) SDL_enabled_assert(condition);
//const SDL_atomic_h_ = ;
//const SDL_CompilerBarrier = () _ReadWriteBarrier();
//const SDL_MemoryBarrierRelease = () __asm__ __volatile__ ("lwsync" : : : "memory");
//const SDL_MemoryBarrierAcquire = () __asm__ __volatile__ ("lwsync" : : : "memory");
//const SDL_MEMORY_BARRIER_USES_FUNCTION = ;
//const SDL_CPUPauseInstruction = () __asm__ __volatile__("pause\n");
//const SDL_AtomicIncRef = (a) SDL_AtomicAdd(a, 1);
//const SDL_AtomicDecRef = (a) (SDL_AtomicAdd(a, -1) == 1);
//const SDL_audio_h_ = ;
const SDL_AUDIO_MASK_BITSIZE = (0xFF);
const SDL_AUDIO_MASK_FLOAT = (1 << 8);
const SDL_AUDIO_MASK_BIG_ENDIAN = (1 << 12);
const SDL_AUDIO_MASK_SIGNED = (1 << 15);
//const SDL_AUDIO_BITSIZE = (x) ((x) & SDL_AUDIO_MASK_BITSIZE);
//const SDL_AUDIO_BYTESIZE = (x) (SDL_AUDIO_BITSIZE(x) / 8);
//const SDL_AUDIO_ISFLOAT = (x) ((x) & SDL_AUDIO_MASK_FLOAT);
//const SDL_AUDIO_ISBIGENDIAN = (x) ((x) & SDL_AUDIO_MASK_BIG_ENDIAN);
//const SDL_AUDIO_ISLITTLEENDIAN = (x) (!SDL_AUDIO_ISBIGENDIAN(x));
//const SDL_AUDIO_ISSIGNED = (x) ((x) & SDL_AUDIO_MASK_SIGNED);
//const SDL_AUDIO_ISINT = (x) (!SDL_AUDIO_ISFLOAT(x));
//const SDL_AUDIO_ISUNSIGNED = (x) (!SDL_AUDIO_ISSIGNED(x));
const SDL_AUDIO_U8 = 0x0008;
const SDL_AUDIO_S8 = 0x8008;
const SDL_AUDIO_S16LE = 0x8010;
const SDL_AUDIO_S16BE = 0x9010;
const SDL_AUDIO_S32LE = 0x8020;
const SDL_AUDIO_S32BE = 0x9020;
const SDL_AUDIO_F32LE = 0x8120;
const SDL_AUDIO_F32BE = 0x9120;
const SDL_AUDIO_S16 = SDL_AUDIO_S16LE;
const SDL_AUDIO_S32 = SDL_AUDIO_S32LE;
const SDL_AUDIO_F32 = SDL_AUDIO_F32LE;
//const SDL_AUDIO_DEVICE_DEFAULT_OUTPUT = ((SDL_AudioDeviceID) 0xFFFFFFFF);
//const SDL_AUDIO_DEVICE_DEFAULT_CAPTURE = ((SDL_AudioDeviceID) 0xFFFFFFFE);
//const SDL_AUDIO_FRAMESIZE = (x) (SDL_AUDIO_BYTESIZE((x).format) * (x).channels);
const SDL_MIX_MAXVOLUME = 128;
//const SDL_begin_code_h = ;
//const SDL_DEPRECATED = __attribute__((deprecated));
//const SDL_UNUSED = __attribute__((unused));
//const DECLSPEC = __declspec(dllexport);
//const SDLCALL = __cdecl;
//const SDL_INLINE = __inline__;
//const __inline__ = __inline;
//const SDL_FORCE_INLINE = __forceinline;
//const SDL_NORETURN = __attribute__((noreturn));
const NULL = 0;
//const SDL_FALLTHROUGH = [[fallthrough]];
//const SDL_HAS_FALLTHROUGH = __has_attribute(__fallthrough__);
//const SDL_MALLOC = __attribute__((malloc));
//const SDL_ALLOC_SIZE = (p) __attribute__((alloc_size(p)));
//const SDL_ALLOC_SIZE2 = (p1, p2) __attribute__((alloc_size(p1, p2)));
//const SDL_bits_h_ = ;
//const SDL_blendmode_h_ = ;
const SDL_BLENDMODE_NONE = 0x00000000;
const SDL_BLENDMODE_BLEND = 0x00000001;
const SDL_BLENDMODE_ADD = 0x00000002;
const SDL_BLENDMODE_MOD = 0x00000004;
const SDL_BLENDMODE_MUL = 0x00000008;
const SDL_BLENDMODE_INVALID = 0x7FFFFFFF;
const SDL_BLENDOPERATION_ADD = 0x1;
const SDL_BLENDOPERATION_SUBTRACT = 0x2;
const SDL_BLENDOPERATION_REV_SUBTRACT = 0x3;
const SDL_BLENDOPERATION_MINIMUM = 0x4;
const SDL_BLENDOPERATION_MAXIMUM = 0x5;
const SDL_BLENDFACTOR_ZERO = 0x1;
const SDL_BLENDFACTOR_ONE = 0x2;
const SDL_BLENDFACTOR_SRC_COLOR = 0x3;
const SDL_BLENDFACTOR_ONE_MINUS_SRC_COLOR = 0x4;
const SDL_BLENDFACTOR_SRC_ALPHA = 0x5;
const SDL_BLENDFACTOR_ONE_MINUS_SRC_ALPHA = 0x6;
const SDL_BLENDFACTOR_DST_COLOR = 0x7;
const SDL_BLENDFACTOR_ONE_MINUS_DST_COLOR = 0x8;
const SDL_BLENDFACTOR_DST_ALPHA = 0x9;
const SDL_BLENDFACTOR_ONE_MINUS_DST_ALPHA = 0xA;
//const SDL_clipboard_h_ = ;
//const SDL_cpuinfo_h_ = ;
const SDL_CACHELINE_SIZE = 128;
//const SDL_endian_h_ = ;
//const __PRFCHWINTRIN_H = ;
const SDL_LIL_ENDIAN = 1234;
const SDL_BIG_ENDIAN = 4321;
//const SDL_BYTEORDER = __BYTE_ORDER;
const SDL_FLOATWORDORDER = SDL_LIL_ENDIAN;
//const HAS_BUILTIN_BSWAP16 = (SDL_HAS_BUILTIN(__builtin_bswap16)) || (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8));
//const HAS_BUILTIN_BSWAP32 = (SDL_HAS_BUILTIN(__builtin_bswap32)) || (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3));
//const HAS_BUILTIN_BSWAP64 = (SDL_HAS_BUILTIN(__builtin_bswap64)) || (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3));
//const HAS_BROKEN_BSWAP = (__GNUC__ == 2 && __GNUC_MINOR__ <= 95);
//const SDL_Swap16 = (x) __builtin_bswap16(x);
//const SDL_Swap32 = (x) __builtin_bswap32(x);
//const SDL_Swap64 = (x) __builtin_bswap64(x);
//const SDL_SwapLE16 = (X) (X);
//const SDL_SwapLE32 = (X) (X);
//const SDL_SwapLE64 = (X) (X);
//const SDL_SwapFloatLE = (X) (X);
//const SDL_SwapBE16 = (X) SDL_Swap16(X);
//const SDL_SwapBE32 = (X) SDL_Swap32(X);
//const SDL_SwapBE64 = (X) SDL_Swap64(X);
//const SDL_SwapFloatBE = (X) SDL_SwapFloat(X);
//const SDL_error_h_ = ;
//const SDL_OutOfMemory = () SDL_Error(SDL_ENOMEM);
//const SDL_Unsupported = () SDL_Error(SDL_UNSUPPORTED);
//const SDL_InvalidParamError = (param) SDL_SetError("Parameter '%s' is invalid", (param));
const SDL_ENOMEM = 0;
const SDL_EFREAD = 1;
const SDL_EFWRITE = 2;
const SDL_EFSEEK = 3;
const SDL_UNSUPPORTED = 4;
const SDL_LASTERROR = 5;
//const SDL_events_h_ = ;
const SDL_RELEASED = 0;
const SDL_PRESSED = 1;
const SDL_EVENT_FIRST = 0;
const SDL_EVENT_QUIT = 0x100;
const SDL_EVENT_TERMINATING = 0x100 + 1;
const SDL_EVENT_LOW_MEMORY = 0x100 + 2;
const SDL_EVENT_WILL_ENTER_BACKGROUND = 0x100 + 3;
const SDL_EVENT_DID_ENTER_BACKGROUND = 0x100 + 4;
const SDL_EVENT_WILL_ENTER_FOREGROUND = 0x100 + 5;
const SDL_EVENT_DID_ENTER_FOREGROUND = 0x100 + 6;
const SDL_EVENT_LOCALE_CHANGED = 0x100 + 7;
const SDL_EVENT_SYSTEM_THEME_CHANGED = 0x100 + 8;
const SDL_EVENT_DISPLAY_ORIENTATION = 0x151;
const SDL_EVENT_DISPLAY_ADDED = 0x151 + 1;
const SDL_EVENT_DISPLAY_REMOVED = 0x151 + 2;
const SDL_EVENT_DISPLAY_MOVED = 0x151 + 3;
const SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED = 0x151 + 4;
const SDL_EVENT_DISPLAY_HDR_STATE_CHANGED = 0x151 + 5;
const SDL_EVENT_DISPLAY_FIRST = SDL_EVENT_DISPLAY_ORIENTATION;
const SDL_EVENT_DISPLAY_LAST = SDL_EVENT_DISPLAY_HDR_STATE_CHANGED;
const SDL_EVENT_WINDOW_SHOWN = 0x202;
const SDL_EVENT_WINDOW_HIDDEN = 0x202 + 1;
const SDL_EVENT_WINDOW_EXPOSED = 0x202 + 2;
const SDL_EVENT_WINDOW_MOVED = 0x202 + 3;
const SDL_EVENT_WINDOW_RESIZED = 0x202 + 4;
const SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED = 0x202 + 5;
const SDL_EVENT_WINDOW_MINIMIZED = 0x202 + 6;
const SDL_EVENT_WINDOW_MAXIMIZED = 0x202 + 7;
const SDL_EVENT_WINDOW_RESTORED = 0x202 + 8;
const SDL_EVENT_WINDOW_MOUSE_ENTER = 0x202 + 9;
const SDL_EVENT_WINDOW_MOUSE_LEAVE = 0x202 + 10;
const SDL_EVENT_WINDOW_FOCUS_GAINED = 0x202 + 11;
const SDL_EVENT_WINDOW_FOCUS_LOST = 0x202 + 12;
const SDL_EVENT_WINDOW_CLOSE_REQUESTED = 0x202 + 13;
const SDL_EVENT_WINDOW_TAKE_FOCUS = 0x202 + 14;
const SDL_EVENT_WINDOW_HIT_TEST = 0x202 + 15;
const SDL_EVENT_WINDOW_ICCPROF_CHANGED = 0x202 + 16;
const SDL_EVENT_WINDOW_DISPLAY_CHANGED = 0x202 + 17;
const SDL_EVENT_WINDOW_DISPLAY_SCALE_CHANGED = 0x202 + 18;
const SDL_EVENT_WINDOW_OCCLUDED = 0x202 + 19;
const SDL_EVENT_WINDOW_ENTER_FULLSCREEN = 0x202 + 20;
const SDL_EVENT_WINDOW_LEAVE_FULLSCREEN = 0x202 + 21;
const SDL_EVENT_WINDOW_DESTROYED = 0x202 + 22;
const SDL_EVENT_WINDOW_PEN_ENTER = 0x202 + 23;
const SDL_EVENT_WINDOW_PEN_LEAVE = 0x202 + 24;
const SDL_EVENT_WINDOW_FIRST = SDL_EVENT_WINDOW_SHOWN;
const SDL_EVENT_WINDOW_LAST = SDL_EVENT_WINDOW_PEN_LEAVE;
const SDL_EVENT_KEY_DOWN = 0x300;
const SDL_EVENT_KEY_UP = 0x300 + 1;
const SDL_EVENT_TEXT_EDITING = 0x300 + 2;
const SDL_EVENT_TEXT_INPUT = 0x300 + 3;
const SDL_EVENT_KEYMAP_CHANGED = 0x300 + 4;
const SDL_EVENT_MOUSE_MOTION = 0x400;
const SDL_EVENT_MOUSE_BUTTON_DOWN = 0x400 + 1;
const SDL_EVENT_MOUSE_BUTTON_UP = 0x400 + 2;
const SDL_EVENT_MOUSE_WHEEL = 0x400 + 3;
const SDL_EVENT_JOYSTICK_AXIS_MOTION = 0x600;
const SDL_EVENT_JOYSTICK_HAT_MOTION = 0x602;
const SDL_EVENT_JOYSTICK_BUTTON_DOWN = 0x602 + 1;
const SDL_EVENT_JOYSTICK_BUTTON_UP = 0x602 + 2;
const SDL_EVENT_JOYSTICK_ADDED = 0x602 + 3;
const SDL_EVENT_JOYSTICK_REMOVED = 0x602 + 4;
const SDL_EVENT_JOYSTICK_BATTERY_UPDATED = 0x602 + 5;
const SDL_EVENT_JOYSTICK_UPDATE_COMPLETE = 0x602 + 6;
const SDL_EVENT_GAMEPAD_AXIS_MOTION = 0x650;
const SDL_EVENT_GAMEPAD_BUTTON_DOWN = 0x650 + 1;
const SDL_EVENT_GAMEPAD_BUTTON_UP = 0x650 + 2;
const SDL_EVENT_GAMEPAD_ADDED = 0x650 + 3;
const SDL_EVENT_GAMEPAD_REMOVED = 0x650 + 4;
const SDL_EVENT_GAMEPAD_REMAPPED = 0x650 + 5;
const SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN = 0x650 + 6;
const SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION = 0x650 + 7;
const SDL_EVENT_GAMEPAD_TOUCHPAD_UP = 0x650 + 8;
const SDL_EVENT_GAMEPAD_SENSOR_UPDATE = 0x650 + 9;
const SDL_EVENT_GAMEPAD_UPDATE_COMPLETE = 0x650 + 10;
const SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED = 0x650 + 11;
const SDL_EVENT_FINGER_DOWN = 0x700;
const SDL_EVENT_FINGER_UP = 0x700 + 1;
const SDL_EVENT_FINGER_MOTION = 0x700 + 2;
const SDL_EVENT_CLIPBOARD_UPDATE = 0x900;
const SDL_EVENT_DROP_FILE = 0x1000;
const SDL_EVENT_DROP_TEXT = 0x1000 + 1;
const SDL_EVENT_DROP_BEGIN = 0x1000 + 2;
const SDL_EVENT_DROP_COMPLETE = 0x1000 + 3;
const SDL_EVENT_DROP_POSITION = 0x1000 + 4;
const SDL_EVENT_AUDIO_DEVICE_ADDED = 0x1100;
const SDL_EVENT_AUDIO_DEVICE_REMOVED = 0x1100 + 1;
const SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED = 0x1100 + 2;
const SDL_EVENT_SENSOR_UPDATE = 0x1200;
const SDL_EVENT_PEN_DOWN = 0x1300;
const SDL_EVENT_PEN_UP = 0x1300 + 1;
const SDL_EVENT_PEN_MOTION = 0x1300 + 2;
const SDL_EVENT_PEN_BUTTON_DOWN = 0x1300 + 3;
const SDL_EVENT_PEN_BUTTON_UP = 0x1300 + 4;
const SDL_EVENT_RENDER_TARGETS_RESET = 0x2000;
const SDL_EVENT_RENDER_DEVICE_RESET = 0x2000 + 1;
const SDL_EVENT_POLL_SENTINEL = 0x7F00;
const SDL_EVENT_USER = 0x8000;
const SDL_EVENT_LAST = 0xFFFF;
const SDL_TEXTEDITINGEVENT_TEXT_SIZE = 64;
const SDL_TEXTINPUTEVENT_TEXT_SIZE = 64;
const SDL_DROPEVENT_DATA_SIZE = 64;
const SDL_ADDEVENT = 0;
const SDL_PEEKEVENT = 1;
const SDL_GETEVENT = 2;
//const SDL_filesystem_h_ = ;
const SDL_FOLDER_HOME = 0;
const SDL_FOLDER_DESKTOP = 1;
const SDL_FOLDER_DOCUMENTS = 2;
const SDL_FOLDER_DOWNLOADS = 3;
const SDL_FOLDER_MUSIC = 4;
const SDL_FOLDER_PICTURES = 5;
const SDL_FOLDER_PUBLICSHARE = 6;
const SDL_FOLDER_SAVEDGAMES = 7;
const SDL_FOLDER_SCREENSHOTS = 8;
const SDL_FOLDER_TEMPLATES = 9;
const SDL_FOLDER_VIDEOS = 10;
//const SDL_gamepad_h_ = ;
const SDL_GAMEPAD_TYPE_UNKNOWN = 0;
const SDL_GAMEPAD_TYPE_STANDARD = 0 + 1;
const SDL_GAMEPAD_TYPE_XBOX360 = 0 + 2;
const SDL_GAMEPAD_TYPE_XBOXONE = 0 + 3;
const SDL_GAMEPAD_TYPE_PS3 = 0 + 4;
const SDL_GAMEPAD_TYPE_PS4 = 0 + 5;
const SDL_GAMEPAD_TYPE_PS5 = 0 + 6;
const SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO = 0 + 7;
const SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT = 0 + 8;
const SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT = 0 + 9;
const SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR = 0 + 10;
const SDL_GAMEPAD_TYPE_MAX = 0 + 11;
const SDL_GAMEPAD_BUTTON_INVALID = -1;
const SDL_GAMEPAD_BUTTON_SOUTH = -1 + 1;
const SDL_GAMEPAD_BUTTON_EAST = -1 + 2;
const SDL_GAMEPAD_BUTTON_WEST = -1 + 3;
const SDL_GAMEPAD_BUTTON_NORTH = -1 + 4;
const SDL_GAMEPAD_BUTTON_BACK = -1 + 5;
const SDL_GAMEPAD_BUTTON_GUIDE = -1 + 6;
const SDL_GAMEPAD_BUTTON_START = -1 + 7;
const SDL_GAMEPAD_BUTTON_LEFT_STICK = -1 + 8;
const SDL_GAMEPAD_BUTTON_RIGHT_STICK = -1 + 9;
const SDL_GAMEPAD_BUTTON_LEFT_SHOULDER = -1 + 10;
const SDL_GAMEPAD_BUTTON_RIGHT_SHOULDER = -1 + 11;
const SDL_GAMEPAD_BUTTON_DPAD_UP = -1 + 12;
const SDL_GAMEPAD_BUTTON_DPAD_DOWN = -1 + 13;
const SDL_GAMEPAD_BUTTON_DPAD_LEFT = -1 + 14;
const SDL_GAMEPAD_BUTTON_DPAD_RIGHT = -1 + 15;
const SDL_GAMEPAD_BUTTON_MISC1 = -1 + 16;
const SDL_GAMEPAD_BUTTON_RIGHT_PADDLE1 = -1 + 17;
const SDL_GAMEPAD_BUTTON_LEFT_PADDLE1 = -1 + 18;
const SDL_GAMEPAD_BUTTON_RIGHT_PADDLE2 = -1 + 19;
const SDL_GAMEPAD_BUTTON_LEFT_PADDLE2 = -1 + 20;
const SDL_GAMEPAD_BUTTON_TOUCHPAD = -1 + 21;
const SDL_GAMEPAD_BUTTON_MISC2 = -1 + 22;
const SDL_GAMEPAD_BUTTON_MISC3 = -1 + 23;
const SDL_GAMEPAD_BUTTON_MISC4 = -1 + 24;
const SDL_GAMEPAD_BUTTON_MISC5 = -1 + 25;
const SDL_GAMEPAD_BUTTON_MISC6 = -1 + 26;
const SDL_GAMEPAD_BUTTON_MAX = -1 + 27;
const SDL_GAMEPAD_BUTTON_LABEL_UNKNOWN = 0;
const SDL_GAMEPAD_BUTTON_LABEL_A = 1;
const SDL_GAMEPAD_BUTTON_LABEL_B = 2;
const SDL_GAMEPAD_BUTTON_LABEL_X = 3;
const SDL_GAMEPAD_BUTTON_LABEL_Y = 4;
const SDL_GAMEPAD_BUTTON_LABEL_CROSS = 5;
const SDL_GAMEPAD_BUTTON_LABEL_CIRCLE = 6;
const SDL_GAMEPAD_BUTTON_LABEL_SQUARE = 7;
const SDL_GAMEPAD_BUTTON_LABEL_TRIANGLE = 8;
const SDL_GAMEPAD_AXIS_INVALID = -1;
const SDL_GAMEPAD_AXIS_LEFTX = -1 + 1;
const SDL_GAMEPAD_AXIS_LEFTY = -1 + 2;
const SDL_GAMEPAD_AXIS_RIGHTX = -1 + 3;
const SDL_GAMEPAD_AXIS_RIGHTY = -1 + 4;
const SDL_GAMEPAD_AXIS_LEFT_TRIGGER = -1 + 5;
const SDL_GAMEPAD_AXIS_RIGHT_TRIGGER = -1 + 6;
const SDL_GAMEPAD_AXIS_MAX = -1 + 7;
const SDL_GAMEPAD_BINDTYPE_NONE = 0;
const SDL_GAMEPAD_BINDTYPE_BUTTON = 0 + 1;
const SDL_GAMEPAD_BINDTYPE_AXIS = 0 + 2;
const SDL_GAMEPAD_BINDTYPE_HAT = 0 + 3;
//const SDL_PROP_GAMEPAD_CAP_MONO_LED_BOOLEAN = SDL_PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN;
//const SDL_PROP_GAMEPAD_CAP_RGB_LED_BOOLEAN = SDL_PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN;
//const SDL_PROP_GAMEPAD_CAP_PLAYER_LED_BOOLEAN = SDL_PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN;
//const SDL_PROP_GAMEPAD_CAP_RUMBLE_BOOLEAN = SDL_PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN;
//const SDL_PROP_GAMEPAD_CAP_TRIGGER_RUMBLE_BOOLEAN = SDL_PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN;
//const SDL_guid_h_ = ;
//const SDL_haptic_h_ = ;
const SDL_HAPTIC_CONSTANT = (1 << 0);
const SDL_HAPTIC_SINE = (1 << 1);
const SDL_HAPTIC_SQUARE = (1 << 2);
const SDL_HAPTIC_TRIANGLE = (1 << 3);
const SDL_HAPTIC_SAWTOOTHUP = (1 << 4);
const SDL_HAPTIC_SAWTOOTHDOWN = (1 << 5);
const SDL_HAPTIC_RAMP = (1 << 6);
const SDL_HAPTIC_SPRING = (1 << 7);
const SDL_HAPTIC_DAMPER = (1 << 8);
const SDL_HAPTIC_INERTIA = (1 << 9);
const SDL_HAPTIC_FRICTION = (1 << 10);
const SDL_HAPTIC_LEFTRIGHT = (1 << 11);
const SDL_HAPTIC_RESERVED1 = (1 << 12);
const SDL_HAPTIC_RESERVED2 = (1 << 13);
const SDL_HAPTIC_RESERVED3 = (1 << 14);
const SDL_HAPTIC_CUSTOM = (1 << 15);
const SDL_HAPTIC_GAIN = (1 << 16);
const SDL_HAPTIC_AUTOCENTER = (1 << 17);
const SDL_HAPTIC_STATUS = (1 << 18);
const SDL_HAPTIC_PAUSE = (1 << 19);
const SDL_HAPTIC_POLAR = 0;
const SDL_HAPTIC_CARTESIAN = 1;
const SDL_HAPTIC_SPHERICAL = 2;
const SDL_HAPTIC_STEERING_AXIS = 3;
const SDL_HAPTIC_INFINITY = 4294967295;
//const SDL_hidapi_h_ = ;
const SDL_HID_API_BUS_UNKNOWN = 0x00;
const SDL_HID_API_BUS_USB = 0x01;
const SDL_HID_API_BUS_BLUETOOTH = 0x02;
const SDL_HID_API_BUS_I2C = 0x03;
const SDL_HID_API_BUS_SPI = 0x04;
//const SDL_hints_h_ = ;
const SDL_HINT_ACCELEROMETER_AS_JOYSTICK = 'SDL_ACCELEROMETER_AS_JOYSTICK';
const SDL_HINT_ALLOW_ALT_TAB_WHILE_GRABBED = 'SDL_ALLOW_ALT_TAB_WHILE_GRABBED';
const SDL_HINT_ALLOW_TOPMOST = 'SDL_ALLOW_TOPMOST';
const SDL_HINT_ANDROID_BLOCK_ON_PAUSE = 'SDL_ANDROID_BLOCK_ON_PAUSE';
const SDL_HINT_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO =
    'SDL_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO';
const SDL_HINT_ANDROID_TRAP_BACK_BUTTON = 'SDL_ANDROID_TRAP_BACK_BUTTON';
const SDL_HINT_ANDROID_ALLOW_RECREATE_ACTIVITY =
    'SDL_ANDROID_ALLOW_RECREATE_ACTIVITY';
const SDL_HINT_APP_ID = 'SDL_APP_ID';
const SDL_HINT_APP_NAME = 'SDL_APP_NAME';
const SDL_HINT_APPLE_TV_CONTROLLER_UI_EVENTS =
    'SDL_APPLE_TV_CONTROLLER_UI_EVENTS';
const SDL_HINT_APPLE_TV_REMOTE_ALLOW_ROTATION =
    'SDL_APPLE_TV_REMOTE_ALLOW_ROTATION';
const SDL_HINT_AUDIO_CATEGORY = 'SDL_AUDIO_CATEGORY';
const SDL_HINT_AUDIO_DEVICE_APP_NAME = 'SDL_AUDIO_DEVICE_APP_NAME';
const SDL_HINT_AUDIO_DEVICE_STREAM_NAME = 'SDL_AUDIO_DEVICE_STREAM_NAME';
const SDL_HINT_AUDIO_DEVICE_STREAM_ROLE = 'SDL_AUDIO_DEVICE_STREAM_ROLE';
const SDL_HINT_AUTO_UPDATE_JOYSTICKS = 'SDL_AUTO_UPDATE_JOYSTICKS';
const SDL_HINT_AUTO_UPDATE_SENSORS = 'SDL_AUTO_UPDATE_SENSORS';
const SDL_HINT_BMP_SAVE_LEGACY_FORMAT = 'SDL_BMP_SAVE_LEGACY_FORMAT';
const SDL_HINT_DISPLAY_USABLE_BOUNDS = 'SDL_DISPLAY_USABLE_BOUNDS';
const SDL_HINT_EMSCRIPTEN_ASYNCIFY = 'SDL_EMSCRIPTEN_ASYNCIFY';
const SDL_HINT_EMSCRIPTEN_CANVAS_SELECTOR = 'SDL_EMSCRIPTEN_CANVAS_SELECTOR';
const SDL_HINT_EMSCRIPTEN_KEYBOARD_ELEMENT = 'SDL_EMSCRIPTEN_KEYBOARD_ELEMENT';
const SDL_HINT_ENABLE_SCREEN_KEYBOARD = 'SDL_ENABLE_SCREEN_KEYBOARD';
const SDL_HINT_EVENT_LOGGING = 'SDL_EVENT_LOGGING';
const SDL_HINT_FORCE_RAISEWINDOW = 'SDL_HINT_FORCE_RAISEWINDOW';
const SDL_HINT_WINDOW_ACTIVATE_WHEN_RAISED = 'SDL_WINDOW_ACTIVATE_WHEN_RAISED';
const SDL_HINT_FRAMEBUFFER_ACCELERATION = 'SDL_FRAMEBUFFER_ACCELERATION';
const SDL_HINT_GAMECONTROLLERCONFIG = 'SDL_GAMECONTROLLERCONFIG';
const SDL_HINT_GAMECONTROLLERCONFIG_FILE = 'SDL_GAMECONTROLLERCONFIG_FILE';
const SDL_HINT_GAMECONTROLLERTYPE = 'SDL_GAMECONTROLLERTYPE';
const SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES =
    'SDL_GAMECONTROLLER_IGNORE_DEVICES';
const SDL_HINT_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT =
    'SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT';
const SDL_HINT_GAMECONTROLLER_SENSOR_FUSION =
    'SDL_GAMECONTROLLER_SENSOR_FUSION';
const SDL_HINT_GRAB_KEYBOARD = 'SDL_GRAB_KEYBOARD';
const SDL_HINT_HIDAPI_ENUMERATE_ONLY_CONTROLLERS =
    'SDL_HIDAPI_ENUMERATE_ONLY_CONTROLLERS';
const SDL_HINT_HIDAPI_IGNORE_DEVICES = 'SDL_HIDAPI_IGNORE_DEVICES';
const SDL_HINT_IME_INTERNAL_EDITING = 'SDL_IME_INTERNAL_EDITING';
const SDL_HINT_IME_SHOW_UI = 'SDL_IME_SHOW_UI';
const SDL_HINT_IOS_HIDE_HOME_INDICATOR = 'SDL_IOS_HIDE_HOME_INDICATOR';
const SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS =
    'SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS';
const SDL_HINT_JOYSTICK_ARCADESTICK_DEVICES =
    'SDL_JOYSTICK_ARCADESTICK_DEVICES';
const SDL_HINT_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED =
    'SDL_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED';
const SDL_HINT_JOYSTICK_BLACKLIST_DEVICES = 'SDL_JOYSTICK_BLACKLIST_DEVICES';
const SDL_HINT_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED =
    'SDL_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED';
const SDL_HINT_JOYSTICK_FLIGHTSTICK_DEVICES =
    'SDL_JOYSTICK_FLIGHTSTICK_DEVICES';
const SDL_HINT_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED =
    'SDL_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED';
const SDL_HINT_JOYSTICK_GAMECUBE_DEVICES = 'SDL_JOYSTICK_GAMECUBE_DEVICES';
const SDL_HINT_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED =
    'SDL_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED';
const SDL_HINT_JOYSTICK_HIDAPI = 'SDL_JOYSTICK_HIDAPI';
const SDL_HINT_JOYSTICK_HIDAPI_GAMECUBE = 'SDL_JOYSTICK_HIDAPI_GAMECUBE';
const SDL_HINT_JOYSTICK_GAMECUBE_RUMBLE_BRAKE =
    'SDL_JOYSTICK_GAMECUBE_RUMBLE_BRAKE';
const SDL_HINT_JOYSTICK_HIDAPI_JOY_CONS = 'SDL_JOYSTICK_HIDAPI_JOY_CONS';
const SDL_HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS =
    'SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS';
const SDL_HINT_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS =
    'SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS';
const SDL_HINT_JOYSTICK_HIDAPI_LUNA = 'SDL_JOYSTICK_HIDAPI_LUNA';
const SDL_HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC =
    'SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC';
const SDL_HINT_JOYSTICK_HIDAPI_SHIELD = 'SDL_JOYSTICK_HIDAPI_SHIELD';
const SDL_HINT_JOYSTICK_HIDAPI_PS3 = 'SDL_JOYSTICK_HIDAPI_PS3';
const SDL_HINT_JOYSTICK_HIDAPI_PS4 = 'SDL_JOYSTICK_HIDAPI_PS4';
const SDL_HINT_JOYSTICK_HIDAPI_PS4_RUMBLE = 'SDL_JOYSTICK_HIDAPI_PS4_RUMBLE';
const SDL_HINT_JOYSTICK_HIDAPI_PS5 = 'SDL_JOYSTICK_HIDAPI_PS5';
const SDL_HINT_JOYSTICK_HIDAPI_PS5_PLAYER_LED =
    'SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED';
const SDL_HINT_JOYSTICK_HIDAPI_PS5_RUMBLE = 'SDL_JOYSTICK_HIDAPI_PS5_RUMBLE';
const SDL_HINT_JOYSTICK_HIDAPI_STADIA = 'SDL_JOYSTICK_HIDAPI_STADIA';
const SDL_HINT_JOYSTICK_HIDAPI_STEAM = 'SDL_JOYSTICK_HIDAPI_STEAM';
const SDL_HINT_JOYSTICK_HIDAPI_STEAMDECK = 'SDL_JOYSTICK_HIDAPI_STEAMDECK';
const SDL_HINT_JOYSTICK_HIDAPI_SWITCH = 'SDL_JOYSTICK_HIDAPI_SWITCH';
const SDL_HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED =
    'SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED';
const SDL_HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED =
    'SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED';
const SDL_HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED =
    'SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED';
const SDL_HINT_JOYSTICK_HIDAPI_WII = 'SDL_JOYSTICK_HIDAPI_WII';
const SDL_HINT_JOYSTICK_HIDAPI_WII_PLAYER_LED =
    'SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX = 'SDL_JOYSTICK_HIDAPI_XBOX';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX_360 = 'SDL_JOYSTICK_HIDAPI_XBOX_360';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED =
    'SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX_360_WIRELESS =
    'SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX_ONE = 'SDL_JOYSTICK_HIDAPI_XBOX_ONE';
const SDL_HINT_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED =
    'SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED';
const SDL_HINT_JOYSTICK_IOKIT = 'SDL_JOYSTICK_IOKIT';
const SDL_HINT_JOYSTICK_MFI = 'SDL_JOYSTICK_MFI';
const SDL_HINT_JOYSTICK_RAWINPUT = 'SDL_JOYSTICK_RAWINPUT';
const SDL_HINT_JOYSTICK_RAWINPUT_CORRELATE_XINPUT =
    'SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT';
const SDL_HINT_JOYSTICK_ROG_CHAKRAM = 'SDL_JOYSTICK_ROG_CHAKRAM';
const SDL_HINT_JOYSTICK_THREAD = 'SDL_JOYSTICK_THREAD';
const SDL_HINT_JOYSTICK_THROTTLE_DEVICES = 'SDL_JOYSTICK_THROTTLE_DEVICES';
const SDL_HINT_JOYSTICK_THROTTLE_DEVICES_EXCLUDED =
    'SDL_JOYSTICK_THROTTLE_DEVICES_EXCLUDED';
const SDL_HINT_JOYSTICK_WGI = 'SDL_JOYSTICK_WGI';
const SDL_HINT_JOYSTICK_WHEEL_DEVICES = 'SDL_JOYSTICK_WHEEL_DEVICES';
const SDL_HINT_JOYSTICK_WHEEL_DEVICES_EXCLUDED =
    'SDL_JOYSTICK_WHEEL_DEVICES_EXCLUDED';
const SDL_HINT_JOYSTICK_ZERO_CENTERED_DEVICES =
    'SDL_JOYSTICK_ZERO_CENTERED_DEVICES';
const SDL_HINT_KMSDRM_REQUIRE_DRM_MASTER = 'SDL_KMSDRM_REQUIRE_DRM_MASTER';
const SDL_HINT_JOYSTICK_DEVICE = 'SDL_JOYSTICK_DEVICE';
const SDL_HINT_LINUX_DIGITAL_HATS = 'SDL_LINUX_DIGITAL_HATS';
const SDL_HINT_LINUX_HAT_DEADZONES = 'SDL_LINUX_HAT_DEADZONES';
const SDL_HINT_LINUX_JOYSTICK_CLASSIC = 'SDL_LINUX_JOYSTICK_CLASSIC';
const SDL_HINT_LINUX_JOYSTICK_DEADZONES = 'SDL_LINUX_JOYSTICK_DEADZONES';
const SDL_HINT_LOGGING = 'SDL_LOGGING';
const SDL_HINT_MAC_BACKGROUND_APP = 'SDL_MAC_BACKGROUND_APP';
const SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK =
    'SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK';
const SDL_HINT_MAC_OPENGL_ASYNC_DISPATCH = 'SDL_MAC_OPENGL_ASYNC_DISPATCH';
const SDL_HINT_MOUSE_DOUBLE_CLICK_RADIUS = 'SDL_MOUSE_DOUBLE_CLICK_RADIUS';
const SDL_HINT_MOUSE_DOUBLE_CLICK_TIME = 'SDL_MOUSE_DOUBLE_CLICK_TIME';
const SDL_HINT_MOUSE_FOCUS_CLICKTHROUGH = 'SDL_MOUSE_FOCUS_CLICKTHROUGH';
const SDL_HINT_MOUSE_NORMAL_SPEED_SCALE = 'SDL_MOUSE_NORMAL_SPEED_SCALE';
const SDL_HINT_MOUSE_RELATIVE_MODE_CENTER = 'SDL_MOUSE_RELATIVE_MODE_CENTER';
const SDL_HINT_MOUSE_RELATIVE_MODE_WARP = 'SDL_MOUSE_RELATIVE_MODE_WARP';
const SDL_HINT_MOUSE_RELATIVE_SPEED_SCALE = 'SDL_MOUSE_RELATIVE_SPEED_SCALE';
const SDL_HINT_MOUSE_RELATIVE_SYSTEM_SCALE = 'SDL_MOUSE_RELATIVE_SYSTEM_SCALE';
const SDL_HINT_MOUSE_RELATIVE_WARP_MOTION = 'SDL_MOUSE_RELATIVE_WARP_MOTION';
const SDL_HINT_MOUSE_TOUCH_EVENTS = 'SDL_MOUSE_TOUCH_EVENTS';
const SDL_HINT_MOUSE_AUTO_CAPTURE = 'SDL_MOUSE_AUTO_CAPTURE';
const SDL_HINT_PEN_NOT_MOUSE = 'SDL_HINT_PEN_NOT_MOUSE';
const SDL_HINT_PEN_DELAY_MOUSE_BUTTON = 'SDL_HINT_PEN_DELAY_MOUSE_BUTTON';
const SDL_HINT_NO_SIGNAL_HANDLERS = 'SDL_NO_SIGNAL_HANDLERS';
const SDL_HINT_OPENGL_ES_DRIVER = 'SDL_OPENGL_ES_DRIVER';
const SDL_HINT_ORIENTATIONS = 'SDL_IOS_ORIENTATIONS';
const SDL_HINT_POLL_SENTINEL = 'SDL_POLL_SENTINEL';
const SDL_HINT_PREFERRED_LOCALES = 'SDL_PREFERRED_LOCALES';
const SDL_HINT_QTWAYLAND_CONTENT_ORIENTATION =
    'SDL_QTWAYLAND_CONTENT_ORIENTATION';
const SDL_HINT_QTWAYLAND_WINDOW_FLAGS = 'SDL_QTWAYLAND_WINDOW_FLAGS';
const SDL_HINT_RENDER_LINE_METHOD = 'SDL_RENDER_LINE_METHOD';
const SDL_HINT_RENDER_DIRECT3D11_DEBUG = 'SDL_RENDER_DIRECT3D11_DEBUG';
const SDL_HINT_RENDER_DIRECT3D_THREADSAFE = 'SDL_RENDER_DIRECT3D_THREADSAFE';
const SDL_HINT_RENDER_DRIVER = 'SDL_RENDER_DRIVER';
const SDL_HINT_RENDER_OPENGL_SHADERS = 'SDL_RENDER_OPENGL_SHADERS';
const SDL_HINT_RENDER_SCALE_QUALITY = 'SDL_RENDER_SCALE_QUALITY';
const SDL_HINT_RENDER_VSYNC = 'SDL_RENDER_VSYNC';
const SDL_HINT_RENDER_METAL_PREFER_LOW_POWER_DEVICE =
    'SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE';
const SDL_HINT_ROG_GAMEPAD_MICE = 'SDL_ROG_GAMEPAD_MICE';
const SDL_HINT_ROG_GAMEPAD_MICE_EXCLUDED = 'SDL_ROG_GAMEPAD_MICE_EXCLUDED';
const SDL_HINT_PS2_DYNAMIC_VSYNC = 'SDL_PS2_DYNAMIC_VSYNC';
const SDL_HINT_RETURN_KEY_HIDES_IME = 'SDL_RETURN_KEY_HIDES_IME';
const SDL_HINT_RPI_VIDEO_LAYER = 'SDL_RPI_VIDEO_LAYER';
const SDL_HINT_SCREENSAVER_INHIBIT_ACTIVITY_NAME =
    'SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME';
const SDL_HINT_THREAD_FORCE_REALTIME_TIME_CRITICAL =
    'SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL';
const SDL_HINT_THREAD_PRIORITY_POLICY = 'SDL_THREAD_PRIORITY_POLICY';
const SDL_HINT_THREAD_STACK_SIZE = 'SDL_THREAD_STACK_SIZE';
const SDL_HINT_TIMER_RESOLUTION = 'SDL_TIMER_RESOLUTION';
const SDL_HINT_TOUCH_MOUSE_EVENTS = 'SDL_TOUCH_MOUSE_EVENTS';
const SDL_HINT_VITA_TOUCH_MOUSE_DEVICE = 'SDL_HINT_VITA_TOUCH_MOUSE_DEVICE';
const SDL_HINT_TV_REMOTE_AS_JOYSTICK = 'SDL_TV_REMOTE_AS_JOYSTICK';
const SDL_HINT_VIDEO_ALLOW_SCREENSAVER = 'SDL_VIDEO_ALLOW_SCREENSAVER';
const SDL_HINT_VIDEO_DOUBLE_BUFFER = 'SDL_VIDEO_DOUBLE_BUFFER';
const SDL_HINT_VIDEO_EGL_ALLOW_GETDISPLAY_FALLBACK =
    'SDL_VIDEO_EGL_GETDISPLAY_FALLBACK';
const SDL_HINT_VIDEO_EXTERNAL_CONTEXT = 'SDL_VIDEO_EXTERNAL_CONTEXT';
const SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES = 'SDL_VIDEO_MAC_FULLSCREEN_SPACES';
const SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS =
    'SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS';
const SDL_HINT_VIDEO_WAYLAND_ALLOW_LIBDECOR =
    'SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR';
const SDL_HINT_VIDEO_WAYLAND_PREFER_LIBDECOR =
    'SDL_VIDEO_WAYLAND_PREFER_LIBDECOR';
const SDL_HINT_VIDEO_WAYLAND_MODE_EMULATION =
    'SDL_VIDEO_WAYLAND_MODE_EMULATION';
const SDL_HINT_VIDEO_WAYLAND_MODE_SCALING = 'SDL_VIDEO_WAYLAND_MODE_SCALING';
const SDL_HINT_VIDEO_WAYLAND_SCALE_TO_DISPLAY =
    'SDL_VIDEO_WAYLAND_SCALE_TO_DISPLAY';
const SDL_HINT_VIDEO_WAYLAND_EMULATE_MOUSE_WARP =
    'SDL_VIDEO_WAYLAND_EMULATE_MOUSE_WARP';
const SDL_HINT_VIDEO_SYNC_WINDOW_OPERATIONS =
    'SDL_VIDEO_SYNC_WINDOW_OPERATIONS';
const SDL_HINT_VIDEO_WIN_D3DCOMPILER = 'SDL_VIDEO_WIN_D3DCOMPILER';
const SDL_HINT_VIDEO_FORCE_EGL = 'SDL_VIDEO_FORCE_EGL';
const SDL_HINT_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR =
    'SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR';
const SDL_HINT_VIDEO_X11_NET_WM_PING = 'SDL_VIDEO_X11_NET_WM_PING';
const SDL_HINT_VIDEO_X11_WINDOW_VISUALID = 'SDL_VIDEO_X11_WINDOW_VISUALID';
const SDL_HINT_VIDEO_X11_SCALING_FACTOR = 'SDL_VIDEO_X11_SCALING_FACTOR';
const SDL_HINT_VIDEO_X11_XRANDR = 'SDL_VIDEO_X11_XRANDR';
const SDL_HINT_WAVE_FACT_CHUNK = 'SDL_WAVE_FACT_CHUNK';
const SDL_HINT_WAVE_RIFF_CHUNK_SIZE = 'SDL_WAVE_RIFF_CHUNK_SIZE';
const SDL_HINT_WAVE_TRUNCATION = 'SDL_WAVE_TRUNCATION';
const SDL_HINT_WINDOWS_ENABLE_MENU_MNEMONICS =
    'SDL_WINDOWS_ENABLE_MENU_MNEMONICS';
const SDL_HINT_WINDOWS_ENABLE_MESSAGELOOP = 'SDL_WINDOWS_ENABLE_MESSAGELOOP';
const SDL_HINT_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS =
    'SDL_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS';
const SDL_HINT_WINDOWS_FORCE_SEMAPHORE_KERNEL =
    'SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL';
const SDL_HINT_WINDOWS_INTRESOURCE_ICON = 'SDL_WINDOWS_INTRESOURCE_ICON';
const SDL_HINT_WINDOWS_INTRESOURCE_ICON_SMALL =
    'SDL_WINDOWS_INTRESOURCE_ICON_SMALL';
const SDL_HINT_WINDOWS_NO_CLOSE_ON_ALT_F4 = 'SDL_WINDOWS_NO_CLOSE_ON_ALT_F4';
const SDL_HINT_WINDOWS_USE_D3D9EX = 'SDL_WINDOWS_USE_D3D9EX';
const SDL_HINT_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN =
    'SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN';
const SDL_HINT_WINDOW_ACTIVATE_WHEN_SHOWN = 'SDL_WINDOW_ACTIVATE_WHEN_SHOWN';
const SDL_HINT_WINRT_HANDLE_BACK_BUTTON = 'SDL_WINRT_HANDLE_BACK_BUTTON';
const SDL_HINT_WINRT_PRIVACY_POLICY_LABEL = 'SDL_WINRT_PRIVACY_POLICY_LABEL';
const SDL_HINT_WINRT_PRIVACY_POLICY_URL = 'SDL_WINRT_PRIVACY_POLICY_URL';
const SDL_HINT_X11_FORCE_OVERRIDE_REDIRECT = 'SDL_X11_FORCE_OVERRIDE_REDIRECT';
const SDL_HINT_XINPUT_ENABLED = 'SDL_XINPUT_ENABLED';
const SDL_HINT_DIRECTINPUT_ENABLED = 'SDL_DIRECTINPUT_ENABLED';
const SDL_HINT_AUDIO_INCLUDE_MONITORS = 'SDL_AUDIO_INCLUDE_MONITORS';
const SDL_HINT_X11_WINDOW_TYPE = 'SDL_X11_WINDOW_TYPE';
const SDL_HINT_QUIT_ON_LAST_WINDOW_CLOSE = 'SDL_QUIT_ON_LAST_WINDOW_CLOSE';
const SDL_HINT_VIDEO_DRIVER = 'SDL_VIDEO_DRIVER';
const SDL_HINT_AUDIO_DRIVER = 'SDL_AUDIO_DRIVER';
const SDL_HINT_KMSDRM_DEVICE_INDEX = 'SDL_KMSDRM_DEVICE_INDEX';
const SDL_HINT_TRACKPAD_IS_TOUCH_ONLY = 'SDL_TRACKPAD_IS_TOUCH_ONLY';
const SDL_HINT_GDK_TEXTINPUT_TITLE = 'SDL_GDK_TEXTINPUT_TITLE';
const SDL_HINT_GDK_TEXTINPUT_DESCRIPTION = 'SDL_GDK_TEXTINPUT_DESCRIPTION';
const SDL_HINT_GDK_TEXTINPUT_DEFAULT = 'SDL_GDK_TEXTINPUT_DEFAULT';
const SDL_HINT_GDK_TEXTINPUT_SCOPE = 'SDL_GDK_TEXTINPUT_SCOPE';
const SDL_HINT_GDK_TEXTINPUT_MAX_LENGTH = 'SDL_GDK_TEXTINPUT_MAX_LENGTH';
const SDL_HINT_AUDIO_DEVICE_SAMPLE_FRAMES = 'SDL_AUDIO_DEVICE_SAMPLE_FRAMES';
const SDL_HINT_MAIN_CALLBACK_RATE = 'SDL_MAIN_CALLBACK_RATE';
const SDL_HINT_SHUTDOWN_DBUS_ON_QUIT = 'SDL_SHUTDOWN_DBUS_ON_QUIT';
const SDL_HINT_DEFAULT = 0;
const SDL_HINT_NORMAL = 1;
const SDL_HINT_OVERRIDE = 2;
//const SDL_init_h_ = ;
const SDL_INIT_TIMER = 0x00000001;
const SDL_INIT_AUDIO = 0x00000010;
const SDL_INIT_VIDEO = 0x00000020;
const SDL_INIT_JOYSTICK = 0x00000200;
const SDL_INIT_HAPTIC = 0x00001000;
const SDL_INIT_GAMEPAD = 0x00002000;
const SDL_INIT_EVENTS = 0x00004000;
const SDL_INIT_SENSOR = 0x00008000;
//const SDL_intrin_h_ = ;
const SDL_NEON_INTRINSICS = 1;
const SDL_ALTIVEC_INTRINSICS = 1;
//const __ARM_NEON = 1;
//const __ARM_ARCH = 8;
//const SDL_HAS_TARGET_ATTRIBS = ;
//const SDL_TARGETING = (x) __attribute__((target(x)));
const SDL_LSX_INTRINSICS = 1;
const SDL_LASX_INTRINSICS = 1;
const SDL_MMX_INTRINSICS = 1;
const SDL_SSE_INTRINSICS = 1;
const SDL_SSE2_INTRINSICS = 1;
const SDL_SSE3_INTRINSICS = 1;
const SDL_SSE4_1_INTRINSICS = 1;
const SDL_SSE4_2_INTRINSICS = 1;
//const SDL_DISABLE_AVX = /* see https:;
const SDL_AVX_INTRINSICS = 1;
//const SDL_DISABLE_AVX2 = /* see https:;
const SDL_AVX2_INTRINSICS = 1;
//const SDL_DISABLE_AVX512F = /* see https:;
const SDL_AVX512F_INTRINSICS = 1;
//const SDL_joystick_h_ = ;
const SDL_JOYSTICK_TYPE_UNKNOWN = 0;
const SDL_JOYSTICK_TYPE_GAMEPAD = 1;
const SDL_JOYSTICK_TYPE_WHEEL = 2;
const SDL_JOYSTICK_TYPE_ARCADE_STICK = 3;
const SDL_JOYSTICK_TYPE_FLIGHT_STICK = 4;
const SDL_JOYSTICK_TYPE_DANCE_PAD = 5;
const SDL_JOYSTICK_TYPE_GUITAR = 6;
const SDL_JOYSTICK_TYPE_DRUM_KIT = 7;
const SDL_JOYSTICK_TYPE_ARCADE_PAD = 8;
const SDL_JOYSTICK_TYPE_THROTTLE = 9;
const SDL_JOYSTICK_POWER_UNKNOWN = -1;
const SDL_JOYSTICK_POWER_EMPTY = -1 + 1;
const SDL_JOYSTICK_POWER_LOW = -1 + 2;
const SDL_JOYSTICK_POWER_MEDIUM = -1 + 3;
const SDL_JOYSTICK_POWER_FULL = -1 + 4;
const SDL_JOYSTICK_POWER_WIRED = -1 + 5;
const SDL_JOYSTICK_POWER_MAX = -1 + 6;
const SDL_JOYSTICK_AXIS_MAX = 32767;
const SDL_JOYSTICK_AXIS_MIN = -32768;
const SDL_IPHONE_MAX_GFORCE = 5.0;
const SDL_VIRTUAL_JOYSTICK_DESC_VERSION = 1;
const SDL_PROP_JOYSTICK_CAP_MONO_LED_BOOLEAN = 'SDL.joystick.cap.mono_led';
const SDL_PROP_JOYSTICK_CAP_RGB_LED_BOOLEAN = 'SDL.joystick.cap.rgb_led';
const SDL_PROP_JOYSTICK_CAP_PLAYER_LED_BOOLEAN = 'SDL.joystick.cap.player_led';
const SDL_PROP_JOYSTICK_CAP_RUMBLE_BOOLEAN = 'SDL.joystick.cap.rumble';
const SDL_PROP_JOYSTICK_CAP_TRIGGER_RUMBLE_BOOLEAN =
    'SDL.joystick.cap.trigger_rumble';
const SDL_HAT_CENTERED = 0x00;
const SDL_HAT_UP = 0x01;
const SDL_HAT_RIGHT = 0x02;
const SDL_HAT_DOWN = 0x04;
const SDL_HAT_LEFT = 0x08;
const SDL_HAT_RIGHTUP = (SDL_HAT_RIGHT | SDL_HAT_UP);
const SDL_HAT_RIGHTDOWN = (SDL_HAT_RIGHT | SDL_HAT_DOWN);
const SDL_HAT_LEFTUP = (SDL_HAT_LEFT | SDL_HAT_UP);
const SDL_HAT_LEFTDOWN = (SDL_HAT_LEFT | SDL_HAT_DOWN);
//const SDL_keyboard_h_ = ;
//const SDL_keycode_h_ = ;
const SDLK_SCANCODE_MASK = (1 << 30);
//const SDL_SCANCODE_TO_KEYCODE = (X) (X | SDLK_SCANCODE_MASK);
const SDLK_UNKNOWN = 0;
const SDLK_RETURN = 13;
const SDLK_ESCAPE = 27;
const SDLK_BACKSPACE = 8;
const SDLK_TAB = 9;
const SDLK_SPACE = 32;
const SDLK_EXCLAIM = 33;
const SDLK_QUOTEDBL = 34;
const SDLK_HASH = 35;
const SDLK_PERCENT = 37;
const SDLK_DOLLAR = 36;
const SDLK_AMPERSAND = 38;
const SDLK_QUOTE = 39;
const SDLK_LEFTPAREN = 40;
const SDLK_RIGHTPAREN = 41;
const SDLK_ASTERISK = 42;
const SDLK_PLUS = 43;
const SDLK_COMMA = 44;
const SDLK_MINUS = 45;
const SDLK_PERIOD = 46;
const SDLK_SLASH = 47;
const SDLK_0 = 48;
const SDLK_1 = 49;
const SDLK_2 = 50;
const SDLK_3 = 51;
const SDLK_4 = 52;
const SDLK_5 = 53;
const SDLK_6 = 54;
const SDLK_7 = 55;
const SDLK_8 = 56;
const SDLK_9 = 57;
const SDLK_COLON = 58;
const SDLK_SEMICOLON = 59;
const SDLK_LESS = 60;
const SDLK_EQUALS = 61;
const SDLK_GREATER = 62;
const SDLK_QUESTION = 63;
const SDLK_AT = 64;
const SDLK_LEFTBRACKET = 91;
const SDLK_BACKSLASH = 92;
const SDLK_RIGHTBRACKET = 93;
const SDLK_CARET = 94;
const SDLK_UNDERSCORE = 95;
const SDLK_BACKQUOTE = 96;
const SDLK_a = 97;
const SDLK_b = 98;
const SDLK_c = 99;
const SDLK_d = 100;
const SDLK_e = 101;
const SDLK_f = 102;
const SDLK_g = 103;
const SDLK_h = 104;
const SDLK_i = 105;
const SDLK_j = 106;
const SDLK_k = 107;
const SDLK_l = 108;
const SDLK_m = 109;
const SDLK_n = 110;
const SDLK_o = 111;
const SDLK_p = 112;
const SDLK_q = 113;
const SDLK_r = 114;
const SDLK_s = 115;
const SDLK_t = 116;
const SDLK_u = 117;
const SDLK_v = 118;
const SDLK_w = 119;
const SDLK_x = 120;
const SDLK_y = 121;
const SDLK_z = 122;
//const SDLK_CAPSLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK);
//const SDLK_F1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1);
//const SDLK_F2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2);
//const SDLK_F3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3);
//const SDLK_F4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4);
//const SDLK_F5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5);
//const SDLK_F6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6);
//const SDLK_F7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7);
//const SDLK_F8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8);
//const SDLK_F9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9);
//const SDLK_F10 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10);
//const SDLK_F11 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11);
//const SDLK_F12 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12);
//const SDLK_PRINTSCREEN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN);
//const SDLK_SCROLLLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK);
//const SDLK_PAUSE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE);
//const SDLK_INSERT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT);
//const SDLK_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME);
//const SDLK_PAGEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP);
const SDLK_DELETE = 127;
//const SDLK_END = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END);
//const SDLK_PAGEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN);
//const SDLK_RIGHT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT);
//const SDLK_LEFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT);
//const SDLK_DOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN);
//const SDLK_UP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP);
//const SDLK_NUMLOCKCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR);
//const SDLK_KP_DIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE);
//const SDLK_KP_MULTIPLY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY);
//const SDLK_KP_MINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS);
//const SDLK_KP_PLUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS);
//const SDLK_KP_ENTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER);
//const SDLK_KP_1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1);
//const SDLK_KP_2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2);
//const SDLK_KP_3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3);
//const SDLK_KP_4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4);
//const SDLK_KP_5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5);
//const SDLK_KP_6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6);
//const SDLK_KP_7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7);
//const SDLK_KP_8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8);
//const SDLK_KP_9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9);
//const SDLK_KP_0 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0);
//const SDLK_KP_PERIOD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD);
//const SDLK_APPLICATION = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION);
//const SDLK_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER);
//const SDLK_KP_EQUALS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS);
//const SDLK_F13 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13);
//const SDLK_F14 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14);
//const SDLK_F15 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15);
//const SDLK_F16 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16);
//const SDLK_F17 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17);
//const SDLK_F18 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18);
//const SDLK_F19 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19);
//const SDLK_F20 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20);
//const SDLK_F21 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21);
//const SDLK_F22 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22);
//const SDLK_F23 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23);
//const SDLK_F24 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24);
//const SDLK_EXECUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE);
//const SDLK_HELP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP);
//const SDLK_MENU = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU);
//const SDLK_SELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT);
//const SDLK_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP);
//const SDLK_AGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN);
//const SDLK_UNDO = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO);
//const SDLK_CUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT);
//const SDLK_COPY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY);
//const SDLK_PASTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE);
//const SDLK_FIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND);
//const SDLK_MUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE);
//const SDLK_VOLUMEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP);
//const SDLK_VOLUMEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN);
//const SDLK_KP_COMMA = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA);
//const SDLK_KP_EQUALSAS400 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALSAS400);
//const SDLK_ALTERASE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE);
//const SDLK_SYSREQ = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ);
//const SDLK_CANCEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL);
//const SDLK_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR);
//const SDLK_PRIOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR);
//const SDLK_RETURN2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2);
//const SDLK_SEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR);
//const SDLK_OUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT);
//const SDLK_OPER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER);
//const SDLK_CLEARAGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN);
//const SDLK_CRSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL);
//const SDLK_EXSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL);
//const SDLK_KP_00 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00);
//const SDLK_KP_000 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000);
//const SDLK_THOUSANDSSEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_THOUSANDSSEPARATOR);
//const SDLK_DECIMALSEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DECIMALSEPARATOR);
//const SDLK_CURRENCYUNIT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT);
//const SDLK_CURRENCYSUBUNIT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYSUBUNIT);
//const SDLK_KP_LEFTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN);
//const SDLK_KP_RIGHTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN);
//const SDLK_KP_LEFTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE);
//const SDLK_KP_RIGHTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE);
//const SDLK_KP_TAB = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB);
//const SDLK_KP_BACKSPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE);
//const SDLK_KP_A = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A);
//const SDLK_KP_B = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B);
//const SDLK_KP_C = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C);
//const SDLK_KP_D = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D);
//const SDLK_KP_E = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E);
//const SDLK_KP_F = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F);
//const SDLK_KP_XOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR);
//const SDLK_KP_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER);
//const SDLK_KP_PERCENT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT);
//const SDLK_KP_LESS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS);
//const SDLK_KP_GREATER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER);
//const SDLK_KP_AMPERSAND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND);
//const SDLK_KP_DBLAMPERSAND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLAMPERSAND);
//const SDLK_KP_VERTICALBAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_VERTICALBAR);
//const SDLK_KP_DBLVERTICALBAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLVERTICALBAR);
//const SDLK_KP_COLON = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON);
//const SDLK_KP_HASH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH);
//const SDLK_KP_SPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE);
//const SDLK_KP_AT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT);
//const SDLK_KP_EXCLAM = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM);
//const SDLK_KP_MEMSTORE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE);
//const SDLK_KP_MEMRECALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL);
//const SDLK_KP_MEMCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR);
//const SDLK_KP_MEMADD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD);
//const SDLK_KP_MEMSUBTRACT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSUBTRACT);
//const SDLK_KP_MEMMULTIPLY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMMULTIPLY);
//const SDLK_KP_MEMDIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE);
//const SDLK_KP_PLUSMINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS);
//const SDLK_KP_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR);
//const SDLK_KP_CLEARENTRY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY);
//const SDLK_KP_BINARY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY);
//const SDLK_KP_OCTAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL);
//const SDLK_KP_DECIMAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL);
//const SDLK_KP_HEXADECIMAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HEXADECIMAL);
//const SDLK_LCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL);
//const SDLK_LSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT);
//const SDLK_LALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT);
//const SDLK_LGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI);
//const SDLK_RCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL);
//const SDLK_RSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT);
//const SDLK_RALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT);
//const SDLK_RGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI);
//const SDLK_MODE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE);
//const SDLK_AUDIONEXT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIONEXT);
//const SDLK_AUDIOPREV = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPREV);
//const SDLK_AUDIOSTOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOSTOP);
//const SDLK_AUDIOPLAY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPLAY);
//const SDLK_AUDIOMUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOMUTE);
//const SDLK_MEDIASELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIASELECT);
//const SDLK_WWW = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WWW);
//const SDLK_MAIL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MAIL);
//const SDLK_CALCULATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALCULATOR);
//const SDLK_COMPUTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COMPUTER);
//const SDLK_AC_SEARCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH);
//const SDLK_AC_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME);
//const SDLK_AC_BACK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK);
//const SDLK_AC_FORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD);
//const SDLK_AC_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP);
//const SDLK_AC_REFRESH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH);
//const SDLK_AC_BOOKMARKS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS);
//const SDLK_BRIGHTNESSDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSDOWN);
//const SDLK_BRIGHTNESSUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSUP);
//const SDLK_DISPLAYSWITCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DISPLAYSWITCH);
//const SDLK_KBDILLUMTOGGLE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMTOGGLE);
//const SDLK_KBDILLUMDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN);
//const SDLK_KBDILLUMUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP);
//const SDLK_EJECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT);
//const SDLK_SLEEP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP);
//const SDLK_APP1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP1);
//const SDLK_APP2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APP2);
//const SDLK_AUDIOREWIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOREWIND);
//const SDLK_AUDIOFASTFORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOFASTFORWARD);
//const SDLK_SOFTLEFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTLEFT);
//const SDLK_SOFTRIGHT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTRIGHT);
//const SDLK_CALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALL);
//const SDLK_ENDCALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ENDCALL);
const SDL_KMOD_NONE = 0x0000;
const SDL_KMOD_LSHIFT = 0x0001;
const SDL_KMOD_RSHIFT = 0x0002;
const SDL_KMOD_LCTRL = 0x0040;
const SDL_KMOD_RCTRL = 0x0080;
const SDL_KMOD_LALT = 0x0100;
const SDL_KMOD_RALT = 0x0200;
const SDL_KMOD_LGUI = 0x0400;
const SDL_KMOD_RGUI = 0x0800;
const SDL_KMOD_NUM = 0x1000;
const SDL_KMOD_CAPS = 0x2000;
const SDL_KMOD_MODE = 0x4000;
const SDL_KMOD_SCROLL = 0x8000;
const SDL_KMOD_CTRL = SDL_KMOD_LCTRL | SDL_KMOD_RCTRL;
const SDL_KMOD_SHIFT = SDL_KMOD_LSHIFT | SDL_KMOD_RSHIFT;
const SDL_KMOD_ALT = SDL_KMOD_LALT | SDL_KMOD_RALT;
const SDL_KMOD_GUI = SDL_KMOD_LGUI | SDL_KMOD_RGUI;
const SDL_KMOD_RESERVED = SDL_KMOD_SCROLL;
//const SDL_loadso_h_ = ;
//const SDL_locale_h = ;
//const SDL_log_h_ = ;
const SDL_MAX_LOG_MESSAGE = 4096;
const SDL_LOG_CATEGORY_APPLICATION = 0;
const SDL_LOG_CATEGORY_ERROR = 1;
const SDL_LOG_CATEGORY_ASSERT = 2;
const SDL_LOG_CATEGORY_SYSTEM = 3;
const SDL_LOG_CATEGORY_AUDIO = 4;
const SDL_LOG_CATEGORY_VIDEO = 5;
const SDL_LOG_CATEGORY_RENDER = 6;
const SDL_LOG_CATEGORY_INPUT = 7;
const SDL_LOG_CATEGORY_TEST = 8;
const SDL_LOG_CATEGORY_RESERVED1 = 9;
const SDL_LOG_CATEGORY_RESERVED2 = 10;
const SDL_LOG_CATEGORY_RESERVED3 = 11;
const SDL_LOG_CATEGORY_RESERVED4 = 12;
const SDL_LOG_CATEGORY_RESERVED5 = 13;
const SDL_LOG_CATEGORY_RESERVED6 = 14;
const SDL_LOG_CATEGORY_RESERVED7 = 15;
const SDL_LOG_CATEGORY_RESERVED8 = 16;
const SDL_LOG_CATEGORY_RESERVED9 = 17;
const SDL_LOG_CATEGORY_RESERVED10 = 18;
const SDL_LOG_CATEGORY_CUSTOM = 19;
const SDL_LOG_PRIORITY_VERBOSE = 1;
const SDL_LOG_PRIORITY_DEBUG = 1 + 1;
const SDL_LOG_PRIORITY_INFO = 1 + 2;
const SDL_LOG_PRIORITY_WARN = 1 + 3;
const SDL_LOG_PRIORITY_ERROR = 1 + 4;
const SDL_LOG_PRIORITY_CRITICAL = 1 + 5;
const SDL_NUM_LOG_PRIORITIES = 1 + 6;
//const SDL_main_h_ = ;
//const SDL_MAIN_AVAILABLE = ;
//const SDL_MAIN_NEEDED = ;
//const SDLMAIN_DECLSPEC = DECLSPEC;
//const SDL_PS2_SKIP_IOP_RESET = () void reset_IOP(); void reset_IOP() {};
//const main = SDL_main;
//const SDL_main_impl_h_ = ;
const SDL_MAIN_CALLBACK_STANDARD = 1;
//const WINAPI = __stdcall;
//const SDL_messagebox_h_ = ;
const SDL_MESSAGEBOX_ERROR = 0x00000010;
const SDL_MESSAGEBOX_WARNING = 0x00000020;
const SDL_MESSAGEBOX_INFORMATION = 0x00000040;
const SDL_MESSAGEBOX_BUTTONS_LEFT_TO_RIGHT = 0x00000080;
const SDL_MESSAGEBOX_BUTTONS_RIGHT_TO_LEFT = 0x00000100;
const SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT = 0x00000001;
const SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT = 0x00000002;
const SDL_MESSAGEBOX_COLOR_BACKGROUND = 0;
const SDL_MESSAGEBOX_COLOR_TEXT = 1;
const SDL_MESSAGEBOX_COLOR_BUTTON_BORDER = 2;
const SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND = 3;
const SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED = 4;
const SDL_MESSAGEBOX_COLOR_MAX = 5;
//const SDL_metal_h_ = ;
//const SDL_misc_h_ = ;
//const SDL_mouse_h_ = ;
const SDL_SYSTEM_CURSOR_ARROW = 0;
const SDL_SYSTEM_CURSOR_IBEAM = 1;
const SDL_SYSTEM_CURSOR_WAIT = 2;
const SDL_SYSTEM_CURSOR_CROSSHAIR = 3;
const SDL_SYSTEM_CURSOR_WAITARROW = 4;
const SDL_SYSTEM_CURSOR_SIZENWSE = 5;
const SDL_SYSTEM_CURSOR_SIZENESW = 6;
const SDL_SYSTEM_CURSOR_SIZEWE = 7;
const SDL_SYSTEM_CURSOR_SIZENS = 8;
const SDL_SYSTEM_CURSOR_SIZEALL = 9;
const SDL_SYSTEM_CURSOR_NO = 10;
const SDL_SYSTEM_CURSOR_HAND = 11;
const SDL_SYSTEM_CURSOR_WINDOW_TOPLEFT = 12;
const SDL_SYSTEM_CURSOR_WINDOW_TOP = 13;
const SDL_SYSTEM_CURSOR_WINDOW_TOPRIGHT = 14;
const SDL_SYSTEM_CURSOR_WINDOW_RIGHT = 15;
const SDL_SYSTEM_CURSOR_WINDOW_BOTTOMRIGHT = 16;
const SDL_SYSTEM_CURSOR_WINDOW_BOTTOM = 17;
const SDL_SYSTEM_CURSOR_WINDOW_BOTTOMLEFT = 18;
const SDL_SYSTEM_CURSOR_WINDOW_LEFT = 19;
const SDL_NUM_SYSTEM_CURSORS = 20;
const SDL_MOUSEWHEEL_NORMAL = 0;
const SDL_MOUSEWHEEL_FLIPPED = 1;
//const SDL_BUTTON = (X) (1 << ((X)-1));
const SDL_BUTTON_LEFT = 1;
const SDL_BUTTON_MIDDLE = 2;
const SDL_BUTTON_RIGHT = 3;
const SDL_BUTTON_X1 = 4;
const SDL_BUTTON_X2 = 5;
//const SDL_BUTTON_LMASK = SDL_BUTTON(SDL_BUTTON_LEFT);
//const SDL_BUTTON_MMASK = SDL_BUTTON(SDL_BUTTON_MIDDLE);
//const SDL_BUTTON_RMASK = SDL_BUTTON(SDL_BUTTON_RIGHT);
//const SDL_BUTTON_X1MASK = SDL_BUTTON(SDL_BUTTON_X1);
//const SDL_BUTTON_X2MASK = SDL_BUTTON(SDL_BUTTON_X2);
//const SDL_mutex_h_ = ;
//const SDL_THREAD_ANNOTATION_ATTRIBUTE__ = (x) __attribute__((x));
//const SDL_CAPABILITY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(capability(x));
//const SDL_SCOPED_CAPABILITY = SDL_THREAD_ANNOTATION_ATTRIBUTE__(scoped_lockable);
//const SDL_GUARDED_BY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(guarded_by(x));
//const SDL_PT_GUARDED_BY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(pt_guarded_by(x));
//const SDL_ACQUIRED_BEFORE = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(acquired_before(x));
//const SDL_ACQUIRED_AFTER = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(acquired_after(x));
//const SDL_REQUIRES = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(requires_capability(x));
//const SDL_REQUIRES_SHARED = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(requires_shared_capability(x));
//const SDL_ACQUIRE = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(acquire_capability(x));
//const SDL_ACQUIRE_SHARED = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(acquire_shared_capability(x));
//const SDL_RELEASE = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(release_capability(x));
//const SDL_RELEASE_SHARED = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(release_shared_capability(x));
//const SDL_RELEASE_GENERIC = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(release_generic_capability(x));
//const SDL_TRY_ACQUIRE = (x, y) SDL_THREAD_ANNOTATION_ATTRIBUTE__(try_acquire_capability(x, y));
//const SDL_TRY_ACQUIRE_SHARED = (x, y) SDL_THREAD_ANNOTATION_ATTRIBUTE__(try_acquire_shared_capability(x, y));
//const SDL_EXCLUDES = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(locks_excluded(x));
//const SDL_ASSERT_CAPABILITY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(assert_capability(x));
//const SDL_ASSERT_SHARED_CAPABILITY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(assert_shared_capability(x));
//const SDL_RETURN_CAPABILITY = (x) SDL_THREAD_ANNOTATION_ATTRIBUTE__(lock_returned(x));
//const SDL_NO_THREAD_SAFETY_ANALYSIS = SDL_THREAD_ANNOTATION_ATTRIBUTE__(no_thread_safety_analysis);
const SDL_MUTEX_TIMEDOUT = 1;
const SDL_RWLOCK_TIMEDOUT = SDL_MUTEX_TIMEDOUT;
//const SDL_oldnames_h_ = ;
//const SDL_AtomicCAS = SDL_AtomicCompareAndSwap;
//const SDL_AtomicCASPtr = SDL_AtomicCompareAndSwapPointer;
//const SDL_AtomicLock = SDL_LockSpinlock;
//const SDL_AtomicTryLock = SDL_TryLockSpinlock;
//const SDL_AtomicUnlock = SDL_UnlockSpinlock;
//const SDL_atomic_t = SDL_AtomicInt;
const AUDIO_F32 = SDL_AUDIO_F32LE;
const AUDIO_F32LSB = SDL_AUDIO_F32LE;
const AUDIO_F32MSB = SDL_AUDIO_F32BE;
const AUDIO_F32SYS = SDL_AUDIO_F32;
const AUDIO_S16 = SDL_AUDIO_S16LE;
const AUDIO_S16LSB = SDL_AUDIO_S16LE;
const AUDIO_S16MSB = SDL_AUDIO_S16BE;
const AUDIO_S16SYS = SDL_AUDIO_S16;
const AUDIO_S32 = SDL_AUDIO_S32LE;
const AUDIO_S32LSB = SDL_AUDIO_S32LE;
const AUDIO_S32MSB = SDL_AUDIO_S32BE;
const AUDIO_S32SYS = SDL_AUDIO_S32;
const AUDIO_S8 = SDL_AUDIO_S8;
const AUDIO_U8 = SDL_AUDIO_U8;
//const SDL_AudioStreamAvailable = SDL_GetAudioStreamAvailable;
//const SDL_AudioStreamClear = SDL_ClearAudioStream;
//const SDL_AudioStreamFlush = SDL_FlushAudioStream;
//const SDL_AudioStreamGet = SDL_GetAudioStreamData;
//const SDL_AudioStreamPut = SDL_PutAudioStreamData;
//const SDL_FreeAudioStream = SDL_DestroyAudioStream;
//const SDL_FreeWAV = SDL_free;
//const SDL_NewAudioStream = SDL_CreateAudioStream;
const SDL_APP_DIDENTERBACKGROUND = SDL_EVENT_DID_ENTER_BACKGROUND;
const SDL_APP_DIDENTERFOREGROUND = SDL_EVENT_DID_ENTER_FOREGROUND;
const SDL_APP_LOWMEMORY = SDL_EVENT_LOW_MEMORY;
const SDL_APP_TERMINATING = SDL_EVENT_TERMINATING;
const SDL_APP_WILLENTERBACKGROUND = SDL_EVENT_WILL_ENTER_BACKGROUND;
const SDL_APP_WILLENTERFOREGROUND = SDL_EVENT_WILL_ENTER_FOREGROUND;
const SDL_AUDIODEVICEADDED = SDL_EVENT_AUDIO_DEVICE_ADDED;
const SDL_AUDIODEVICEREMOVED = SDL_EVENT_AUDIO_DEVICE_REMOVED;
const SDL_CLIPBOARDUPDATE = SDL_EVENT_CLIPBOARD_UPDATE;
const SDL_CONTROLLERAXISMOTION = SDL_EVENT_GAMEPAD_AXIS_MOTION;
const SDL_CONTROLLERBUTTONDOWN = SDL_EVENT_GAMEPAD_BUTTON_DOWN;
const SDL_CONTROLLERBUTTONUP = SDL_EVENT_GAMEPAD_BUTTON_UP;
const SDL_CONTROLLERDEVICEADDED = SDL_EVENT_GAMEPAD_ADDED;
const SDL_CONTROLLERDEVICEREMAPPED = SDL_EVENT_GAMEPAD_REMAPPED;
const SDL_CONTROLLERDEVICEREMOVED = SDL_EVENT_GAMEPAD_REMOVED;
const SDL_CONTROLLERSENSORUPDATE = SDL_EVENT_GAMEPAD_SENSOR_UPDATE;
const SDL_CONTROLLERSTEAMHANDLEUPDATED = SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED;
const SDL_CONTROLLERTOUCHPADDOWN = SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN;
const SDL_CONTROLLERTOUCHPADMOTION = SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION;
const SDL_CONTROLLERTOUCHPADUP = SDL_EVENT_GAMEPAD_TOUCHPAD_UP;
//const SDL_ControllerAxisEvent = SDL_GamepadAxisEvent;
//const SDL_ControllerButtonEvent = SDL_GamepadButtonEvent;
//const SDL_ControllerDeviceEvent = SDL_GamepadDeviceEvent;
//const SDL_ControllerSensorEvent = SDL_GamepadSensorEvent;
//const SDL_ControllerTouchpadEvent = SDL_GamepadTouchpadEvent;
const SDL_DISPLAYEVENT_CONNECTED = SDL_EVENT_DISPLAY_ADDED;
const SDL_DISPLAYEVENT_DISCONNECTED = SDL_EVENT_DISPLAY_REMOVED;
const SDL_DISPLAYEVENT_MOVED = SDL_EVENT_DISPLAY_MOVED;
const SDL_DISPLAYEVENT_ORIENTATION = SDL_EVENT_DISPLAY_ORIENTATION;
const SDL_DROPBEGIN = SDL_EVENT_DROP_BEGIN;
const SDL_DROPCOMPLETE = SDL_EVENT_DROP_COMPLETE;
const SDL_DROPFILE = SDL_EVENT_DROP_FILE;
const SDL_DROPTEXT = SDL_EVENT_DROP_TEXT;
const SDL_FINGERDOWN = SDL_EVENT_FINGER_DOWN;
const SDL_FINGERMOTION = SDL_EVENT_FINGER_MOTION;
const SDL_FINGERUP = SDL_EVENT_FINGER_UP;
const SDL_FIRSTEVENT = SDL_EVENT_FIRST;
const SDL_JOYAXISMOTION = SDL_EVENT_JOYSTICK_AXIS_MOTION;
const SDL_JOYBATTERYUPDATED = SDL_EVENT_JOYSTICK_BATTERY_UPDATED;
const SDL_JOYBUTTONDOWN = SDL_EVENT_JOYSTICK_BUTTON_DOWN;
const SDL_JOYBUTTONUP = SDL_EVENT_JOYSTICK_BUTTON_UP;
const SDL_JOYDEVICEADDED = SDL_EVENT_JOYSTICK_ADDED;
const SDL_JOYDEVICEREMOVED = SDL_EVENT_JOYSTICK_REMOVED;
const SDL_JOYHATMOTION = SDL_EVENT_JOYSTICK_HAT_MOTION;
const SDL_KEYDOWN = SDL_EVENT_KEY_DOWN;
const SDL_KEYMAPCHANGED = SDL_EVENT_KEYMAP_CHANGED;
const SDL_KEYUP = SDL_EVENT_KEY_UP;
const SDL_LASTEVENT = SDL_EVENT_LAST;
const SDL_LOCALECHANGED = SDL_EVENT_LOCALE_CHANGED;
const SDL_MOUSEBUTTONDOWN = SDL_EVENT_MOUSE_BUTTON_DOWN;
const SDL_MOUSEBUTTONUP = SDL_EVENT_MOUSE_BUTTON_UP;
const SDL_MOUSEMOTION = SDL_EVENT_MOUSE_MOTION;
const SDL_MOUSEWHEEL = SDL_EVENT_MOUSE_WHEEL;
const SDL_POLLSENTINEL = SDL_EVENT_POLL_SENTINEL;
const SDL_QUIT = SDL_EVENT_QUIT;
const SDL_RENDER_DEVICE_RESET = SDL_EVENT_RENDER_DEVICE_RESET;
const SDL_RENDER_TARGETS_RESET = SDL_EVENT_RENDER_TARGETS_RESET;
const SDL_SENSORUPDATE = SDL_EVENT_SENSOR_UPDATE;
const SDL_TEXTEDITING = SDL_EVENT_TEXT_EDITING;
//const SDL_TEXTEDITING_EXT = SDL_EVENT_TEXT_EDITING_EXT;
const SDL_TEXTINPUT = SDL_EVENT_TEXT_INPUT;
const SDL_USEREVENT = SDL_EVENT_USER;
const SDL_WINDOWEVENT_CLOSE = SDL_EVENT_WINDOW_CLOSE_REQUESTED;
const SDL_WINDOWEVENT_DISPLAY_CHANGED = SDL_EVENT_WINDOW_DISPLAY_CHANGED;
const SDL_WINDOWEVENT_ENTER = SDL_EVENT_WINDOW_MOUSE_ENTER;
const SDL_WINDOWEVENT_EXPOSED = SDL_EVENT_WINDOW_EXPOSED;
const SDL_WINDOWEVENT_FOCUS_GAINED = SDL_EVENT_WINDOW_FOCUS_GAINED;
const SDL_WINDOWEVENT_FOCUS_LOST = SDL_EVENT_WINDOW_FOCUS_LOST;
const SDL_WINDOWEVENT_HIDDEN = SDL_EVENT_WINDOW_HIDDEN;
const SDL_WINDOWEVENT_HIT_TEST = SDL_EVENT_WINDOW_HIT_TEST;
const SDL_WINDOWEVENT_ICCPROF_CHANGED = SDL_EVENT_WINDOW_ICCPROF_CHANGED;
const SDL_WINDOWEVENT_LEAVE = SDL_EVENT_WINDOW_MOUSE_LEAVE;
const SDL_WINDOWEVENT_MAXIMIZED = SDL_EVENT_WINDOW_MAXIMIZED;
const SDL_WINDOWEVENT_MINIMIZED = SDL_EVENT_WINDOW_MINIMIZED;
const SDL_WINDOWEVENT_MOVED = SDL_EVENT_WINDOW_MOVED;
const SDL_WINDOWEVENT_RESIZED = SDL_EVENT_WINDOW_RESIZED;
const SDL_WINDOWEVENT_RESTORED = SDL_EVENT_WINDOW_RESTORED;
const SDL_WINDOWEVENT_SHOWN = SDL_EVENT_WINDOW_SHOWN;
const SDL_WINDOWEVENT_SIZE_CHANGED = SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED;
const SDL_WINDOWEVENT_TAKE_FOCUS = SDL_EVENT_WINDOW_TAKE_FOCUS;
const SDL_CONTROLLER_AXIS_INVALID = SDL_GAMEPAD_AXIS_INVALID;
const SDL_CONTROLLER_AXIS_LEFTX = SDL_GAMEPAD_AXIS_LEFTX;
const SDL_CONTROLLER_AXIS_LEFTY = SDL_GAMEPAD_AXIS_LEFTY;
const SDL_CONTROLLER_AXIS_MAX = SDL_GAMEPAD_AXIS_MAX;
const SDL_CONTROLLER_AXIS_RIGHTX = SDL_GAMEPAD_AXIS_RIGHTX;
const SDL_CONTROLLER_AXIS_RIGHTY = SDL_GAMEPAD_AXIS_RIGHTY;
const SDL_CONTROLLER_AXIS_TRIGGERLEFT = SDL_GAMEPAD_AXIS_LEFT_TRIGGER;
const SDL_CONTROLLER_AXIS_TRIGGERRIGHT = SDL_GAMEPAD_AXIS_RIGHT_TRIGGER;
const SDL_CONTROLLER_BINDTYPE_AXIS = SDL_GAMEPAD_BINDTYPE_AXIS;
const SDL_CONTROLLER_BINDTYPE_BUTTON = SDL_GAMEPAD_BINDTYPE_BUTTON;
const SDL_CONTROLLER_BINDTYPE_HAT = SDL_GAMEPAD_BINDTYPE_HAT;
const SDL_CONTROLLER_BINDTYPE_NONE = SDL_GAMEPAD_BINDTYPE_NONE;
const SDL_CONTROLLER_BUTTON_A = SDL_GAMEPAD_BUTTON_SOUTH;
const SDL_CONTROLLER_BUTTON_B = SDL_GAMEPAD_BUTTON_EAST;
const SDL_CONTROLLER_BUTTON_BACK = SDL_GAMEPAD_BUTTON_BACK;
const SDL_CONTROLLER_BUTTON_DPAD_DOWN = SDL_GAMEPAD_BUTTON_DPAD_DOWN;
const SDL_CONTROLLER_BUTTON_DPAD_LEFT = SDL_GAMEPAD_BUTTON_DPAD_LEFT;
const SDL_CONTROLLER_BUTTON_DPAD_RIGHT = SDL_GAMEPAD_BUTTON_DPAD_RIGHT;
const SDL_CONTROLLER_BUTTON_DPAD_UP = SDL_GAMEPAD_BUTTON_DPAD_UP;
const SDL_CONTROLLER_BUTTON_GUIDE = SDL_GAMEPAD_BUTTON_GUIDE;
const SDL_CONTROLLER_BUTTON_INVALID = SDL_GAMEPAD_BUTTON_INVALID;
const SDL_CONTROLLER_BUTTON_LEFTSHOULDER = SDL_GAMEPAD_BUTTON_LEFT_SHOULDER;
const SDL_CONTROLLER_BUTTON_LEFTSTICK = SDL_GAMEPAD_BUTTON_LEFT_STICK;
const SDL_CONTROLLER_BUTTON_MAX = SDL_GAMEPAD_BUTTON_MAX;
const SDL_CONTROLLER_BUTTON_MISC1 = SDL_GAMEPAD_BUTTON_MISC1;
const SDL_CONTROLLER_BUTTON_PADDLE1 = SDL_GAMEPAD_BUTTON_RIGHT_PADDLE1;
const SDL_CONTROLLER_BUTTON_PADDLE2 = SDL_GAMEPAD_BUTTON_LEFT_PADDLE1;
const SDL_CONTROLLER_BUTTON_PADDLE3 = SDL_GAMEPAD_BUTTON_RIGHT_PADDLE2;
const SDL_CONTROLLER_BUTTON_PADDLE4 = SDL_GAMEPAD_BUTTON_LEFT_PADDLE2;
const SDL_CONTROLLER_BUTTON_RIGHTSHOULDER = SDL_GAMEPAD_BUTTON_RIGHT_SHOULDER;
const SDL_CONTROLLER_BUTTON_RIGHTSTICK = SDL_GAMEPAD_BUTTON_RIGHT_STICK;
const SDL_CONTROLLER_BUTTON_START = SDL_GAMEPAD_BUTTON_START;
const SDL_CONTROLLER_BUTTON_TOUCHPAD = SDL_GAMEPAD_BUTTON_TOUCHPAD;
const SDL_CONTROLLER_BUTTON_X = SDL_GAMEPAD_BUTTON_WEST;
const SDL_CONTROLLER_BUTTON_Y = SDL_GAMEPAD_BUTTON_NORTH;
const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_LEFT =
    SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_LEFT;
const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_PAIR =
    SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_PAIR;
const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT =
    SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_JOYCON_RIGHT;
const SDL_CONTROLLER_TYPE_NINTENDO_SWITCH_PRO =
    SDL_GAMEPAD_TYPE_NINTENDO_SWITCH_PRO;
const SDL_CONTROLLER_TYPE_PS3 = SDL_GAMEPAD_TYPE_PS3;
const SDL_CONTROLLER_TYPE_PS4 = SDL_GAMEPAD_TYPE_PS4;
const SDL_CONTROLLER_TYPE_PS5 = SDL_GAMEPAD_TYPE_PS5;
const SDL_CONTROLLER_TYPE_UNKNOWN = SDL_GAMEPAD_TYPE_STANDARD;
//const SDL_CONTROLLER_TYPE_VIRTUAL = SDL_GAMEPAD_TYPE_VIRTUAL;
const SDL_CONTROLLER_TYPE_XBOX360 = SDL_GAMEPAD_TYPE_XBOX360;
const SDL_CONTROLLER_TYPE_XBOXONE = SDL_GAMEPAD_TYPE_XBOXONE;
//const SDL_GameController = SDL_Gamepad;
//const SDL_GameControllerAddMapping = SDL_AddGamepadMapping;
//const SDL_GameControllerAddMappingsFromFile = SDL_AddGamepadMappingsFromFile;
//const SDL_GameControllerAddMappingsFromRW = SDL_AddGamepadMappingsFromRW;
//const SDL_GameControllerAxis = SDL_GamepadAxis;
//const SDL_GameControllerBindType = SDL_GamepadBindingType;
//const SDL_GameControllerButton = SDL_GamepadButton;
//const SDL_GameControllerClose = SDL_CloseGamepad;
//const SDL_GameControllerFromInstanceID = SDL_GetGamepadFromInstanceID;
//const SDL_GameControllerFromPlayerIndex = SDL_GetGamepadFromPlayerIndex;
//const SDL_GameControllerGetAppleSFSymbolsNameForAxis = SDL_GetGamepadAppleSFSymbolsNameForAxis;
//const SDL_GameControllerGetAppleSFSymbolsNameForButton = SDL_GetGamepadAppleSFSymbolsNameForButton;
//const SDL_GameControllerGetAttached = SDL_GamepadConnected;
//const SDL_GameControllerGetAxis = SDL_GetGamepadAxis;
//const SDL_GameControllerGetAxisFromString = SDL_GetGamepadAxisFromString;
//const SDL_GameControllerGetButton = SDL_GetGamepadButton;
//const SDL_GameControllerGetButtonFromString = SDL_GetGamepadButtonFromString;
//const SDL_GameControllerGetFirmwareVersion = SDL_GetGamepadFirmwareVersion;
//const SDL_GameControllerGetJoystick = SDL_GetGamepadJoystick;
//const SDL_GameControllerGetNumTouchpadFingers = SDL_GetNumGamepadTouchpadFingers;
//const SDL_GameControllerGetNumTouchpads = SDL_GetNumGamepadTouchpads;
//const SDL_GameControllerGetPlayerIndex = SDL_GetGamepadPlayerIndex;
//const SDL_GameControllerGetProduct = SDL_GetGamepadProduct;
//const SDL_GameControllerGetProductVersion = SDL_GetGamepadProductVersion;
//const SDL_GameControllerGetSensorData = SDL_GetGamepadSensorData;
//const SDL_GameControllerGetSensorDataRate = SDL_GetGamepadSensorDataRate;
//const SDL_GameControllerGetSerial = SDL_GetGamepadSerial;
//const SDL_GameControllerGetSteamHandle = SDL_GetGamepadSteamHandle;
//const SDL_GameControllerGetStringForAxis = SDL_GetGamepadStringForAxis;
//const SDL_GameControllerGetStringForButton = SDL_GetGamepadStringForButton;
//const SDL_GameControllerGetTouchpadFinger = SDL_GetGamepadTouchpadFinger;
//const SDL_GameControllerGetType = SDL_GetGamepadType;
//const SDL_GameControllerGetVendor = SDL_GetGamepadVendor;
//const SDL_GameControllerHasAxis = SDL_GamepadHasAxis;
//const SDL_GameControllerHasButton = SDL_GamepadHasButton;
//const SDL_GameControllerHasSensor = SDL_GamepadHasSensor;
//const SDL_GameControllerIsSensorEnabled = SDL_GamepadSensorEnabled;
//const SDL_GameControllerMapping = SDL_GetGamepadMapping;
//const SDL_GameControllerMappingForGUID = SDL_GetGamepadMappingForGUID;
//const SDL_GameControllerName = SDL_GetGamepadName;
//const SDL_GameControllerOpen = SDL_OpenGamepad;
//const SDL_GameControllerPath = SDL_GetGamepadPath;
//const SDL_GameControllerRumble = SDL_RumbleGamepad;
//const SDL_GameControllerRumbleTriggers = SDL_RumbleGamepadTriggers;
//const SDL_GameControllerSendEffect = SDL_SendGamepadEffect;
//const SDL_GameControllerSetLED = SDL_SetGamepadLED;
//const SDL_GameControllerSetPlayerIndex = SDL_SetGamepadPlayerIndex;
//const SDL_GameControllerSetSensorEnabled = SDL_SetGamepadSensorEnabled;
//const SDL_GameControllerType = SDL_GamepadType;
//const SDL_GameControllerUpdate = SDL_UpdateGamepads;
const SDL_INIT_GAMECONTROLLER = SDL_INIT_GAMEPAD;
//const SDL_IsGameController = SDL_IsGamepad;
//const SDL_HapticClose = SDL_CloseHaptic;
//const SDL_HapticDestroyEffect = SDL_DestroyHapticEffect;
//const SDL_HapticGetEffectStatus = SDL_GetHapticEffectStatus;
//const SDL_HapticNewEffect = SDL_CreateHapticEffect;
//const SDL_HapticNumAxes = SDL_GetNumHapticAxes;
//const SDL_HapticNumEffects = SDL_GetMaxHapticEffects;
//const SDL_HapticNumEffectsPlaying = SDL_GetMaxHapticEffectsPlaying;
//const SDL_HapticOpen = SDL_OpenHaptic;
//const SDL_HapticOpenFromJoystick = SDL_OpenHapticFromJoystick;
//const SDL_HapticOpenFromMouse = SDL_OpenHapticFromMouse;
//const SDL_HapticPause = SDL_PauseHaptic;
//const SDL_HapticQuery = SDL_GetHapticFeatures;
//const SDL_HapticRumbleInit = SDL_InitHapticRumble;
//const SDL_HapticRumblePlay = SDL_PlayHapticRumble;
//const SDL_HapticRumbleStop = SDL_StopHapticRumble;
//const SDL_HapticRunEffect = SDL_RunHapticEffect;
//const SDL_HapticSetAutocenter = SDL_SetHapticAutocenter;
//const SDL_HapticSetGain = SDL_SetHapticGain;
//const SDL_HapticStopAll = SDL_StopHapticEffects;
//const SDL_HapticStopEffect = SDL_StopHapticEffect;
//const SDL_HapticUnpause = SDL_ResumeHaptic;
//const SDL_HapticUpdateEffect = SDL_UpdateHapticEffect;
//const SDL_JoystickIsHaptic = SDL_IsJoystickHaptic;
//const SDL_MouseIsHaptic = SDL_IsMouseHaptic;
const SDL_JOYSTICK_TYPE_GAMECONTROLLER = SDL_JOYSTICK_TYPE_GAMEPAD;
//const SDL_JoystickAttachVirtual = SDL_AttachVirtualJoystick;
//const SDL_JoystickAttachVirtualEx = SDL_AttachVirtualJoystickEx;
//const SDL_JoystickClose = SDL_CloseJoystick;
//const SDL_JoystickCurrentPowerLevel = SDL_GetJoystickPowerLevel;
//const SDL_JoystickDetachVirtual = SDL_DetachVirtualJoystick;
//const SDL_JoystickFromInstanceID = SDL_GetJoystickFromInstanceID;
//const SDL_JoystickFromPlayerIndex = SDL_GetJoystickFromPlayerIndex;
//const SDL_JoystickGetAttached = SDL_JoystickConnected;
//const SDL_JoystickGetAxis = SDL_GetJoystickAxis;
//const SDL_JoystickGetAxisInitialState = SDL_GetJoystickAxisInitialState;
//const SDL_JoystickGetButton = SDL_GetJoystickButton;
//const SDL_JoystickGetFirmwareVersion = SDL_GetJoystickFirmwareVersion;
//const SDL_JoystickGetGUID = SDL_GetJoystickGUID;
//const SDL_JoystickGetGUIDFromString = SDL_GetJoystickGUIDFromString;
//const SDL_JoystickGetGUIDString = SDL_GetJoystickGUIDString;
//const SDL_JoystickGetHat = SDL_GetJoystickHat;
//const SDL_JoystickGetPlayerIndex = SDL_GetJoystickPlayerIndex;
//const SDL_JoystickGetProduct = SDL_GetJoystickProduct;
//const SDL_JoystickGetProductVersion = SDL_GetJoystickProductVersion;
//const SDL_JoystickGetSerial = SDL_GetJoystickSerial;
//const SDL_JoystickGetType = SDL_GetJoystickType;
//const SDL_JoystickGetVendor = SDL_GetJoystickVendor;
//const SDL_JoystickInstanceID = SDL_GetJoystickInstanceID;
//const SDL_JoystickIsVirtual = SDL_IsJoystickVirtual;
//const SDL_JoystickName = SDL_GetJoystickName;
//const SDL_JoystickNumAxes = SDL_GetNumJoystickAxes;
//const SDL_JoystickNumButtons = SDL_GetNumJoystickButtons;
//const SDL_JoystickNumHats = SDL_GetNumJoystickHats;
//const SDL_JoystickOpen = SDL_OpenJoystick;
//const SDL_JoystickPath = SDL_GetJoystickPath;
//const SDL_JoystickRumble = SDL_RumbleJoystick;
//const SDL_JoystickRumbleTriggers = SDL_RumbleJoystickTriggers;
//const SDL_JoystickSendEffect = SDL_SendJoystickEffect;
//const SDL_JoystickSetLED = SDL_SetJoystickLED;
//const SDL_JoystickSetPlayerIndex = SDL_SetJoystickPlayerIndex;
//const SDL_JoystickSetVirtualAxis = SDL_SetJoystickVirtualAxis;
//const SDL_JoystickSetVirtualButton = SDL_SetJoystickVirtualButton;
//const SDL_JoystickSetVirtualHat = SDL_SetJoystickVirtualHat;
//const SDL_JoystickUpdate = SDL_UpdateJoysticks;
//const SDL_IsScreenKeyboardShown = SDL_ScreenKeyboardShown;
//const SDL_IsTextInputActive = SDL_TextInputActive;
//const SDL_IsTextInputShown = SDL_TextInputShown;
const KMOD_ALT = SDL_KMOD_ALT;
const KMOD_CAPS = SDL_KMOD_CAPS;
const KMOD_CTRL = SDL_KMOD_CTRL;
const KMOD_GUI = SDL_KMOD_GUI;
const KMOD_LALT = SDL_KMOD_LALT;
const KMOD_LCTRL = SDL_KMOD_LCTRL;
const KMOD_LGUI = SDL_KMOD_LGUI;
const KMOD_LSHIFT = SDL_KMOD_LSHIFT;
const KMOD_MODE = SDL_KMOD_MODE;
const KMOD_NONE = SDL_KMOD_NONE;
const KMOD_NUM = SDL_KMOD_NUM;
const KMOD_RALT = SDL_KMOD_RALT;
const KMOD_RCTRL = SDL_KMOD_RCTRL;
const KMOD_RESERVED = SDL_KMOD_RESERVED;
const KMOD_RGUI = SDL_KMOD_RGUI;
const KMOD_RSHIFT = SDL_KMOD_RSHIFT;
const KMOD_SCROLL = SDL_KMOD_SCROLL;
const KMOD_SHIFT = SDL_KMOD_SHIFT;
//const SDL_FreeCursor = SDL_DestroyCursor;
//const SDL_CondBroadcast = SDL_BroadcastCondition;
//const SDL_CondSignal = SDL_SignalCondition;
//const SDL_CondWait = SDL_WaitCondition;
//const SDL_CondWaitTimeout = SDL_WaitConditionTimeout;
//const SDL_CreateCond = SDL_CreateCondition;
//const SDL_DestroyCond = SDL_DestroyCondition;
//const SDL_SemPost = SDL_PostSemaphore;
//const SDL_SemTryWait = SDL_TryWaitSemaphore;
//const SDL_SemValue = SDL_GetSemaphoreValue;
//const SDL_SemWait = SDL_WaitSemaphore;
//const SDL_SemWaitTimeout = SDL_WaitSemaphoreTimeout;
//const SDL_cond = SDL_Condition;
//const SDL_mutex = SDL_Mutex;
//const SDL_sem = SDL_Semaphore;
//const SDL_AllocFormat = SDL_CreatePixelFormat;
//const SDL_AllocPalette = SDL_CreatePalette;
//const SDL_FreeFormat = SDL_DestroyPixelFormat;
//const SDL_FreePalette = SDL_DestroyPalette;
//const SDL_MasksToPixelFormatEnum = SDL_GetPixelFormatEnumForMasks;
//const SDL_PIXELFORMAT_BGR888 = SDL_PIXELFORMAT_XBGR8888;
//const SDL_PIXELFORMAT_RGB888 = SDL_PIXELFORMAT_XRGB8888;
//const SDL_PixelFormatEnumToMasks = SDL_GetMasksForPixelFormatEnum;
//const SDL_EncloseFPoints = SDL_GetRectEnclosingPointsFloat;
//const SDL_EnclosePoints = SDL_GetRectEnclosingPoints;
//const SDL_FRectEmpty = SDL_RectEmptyFloat;
//const SDL_FRectEquals = SDL_RectsEqualFloat;
//const SDL_FRectEqualsEpsilon = SDL_RectsEqualEpsilon;
//const SDL_HasIntersection = SDL_HasRectIntersection;
//const SDL_HasIntersectionF = SDL_HasRectIntersectionFloat;
//const SDL_IntersectFRect = SDL_GetRectIntersectionFloat;
//const SDL_IntersectFRectAndLine = SDL_GetRectAndLineIntersectionFloat;
//const SDL_IntersectRect = SDL_GetRectIntersection;
//const SDL_IntersectRectAndLine = SDL_GetRectAndLineIntersection;
//const SDL_PointInFRect = SDL_PointInRectFloat;
//const SDL_RectEquals = SDL_RectsEqual;
//const SDL_UnionFRect = SDL_GetRectUnionFloat;
//const SDL_UnionRect = SDL_GetRectUnion;
//const SDL_GetRendererOutputSize = SDL_GetCurrentRenderOutputSize;
//const SDL_RenderCopy = SDL_RenderTexture;
//const SDL_RenderCopyEx = SDL_RenderTextureRotated;
//const SDL_RenderCopyExF = SDL_RenderTextureRotated;
//const SDL_RenderCopyF = SDL_RenderTexture;
//const SDL_RenderDrawLine = SDL_RenderLine;
//const SDL_RenderDrawLineF = SDL_RenderLine;
//const SDL_RenderDrawLines = SDL_RenderLines;
//const SDL_RenderDrawLinesF = SDL_RenderLines;
//const SDL_RenderDrawPoint = SDL_RenderPoint;
//const SDL_RenderDrawPointF = SDL_RenderPoint;
//const SDL_RenderDrawPoints = SDL_RenderPoints;
//const SDL_RenderDrawPointsF = SDL_RenderPoints;
//const SDL_RenderDrawRect = SDL_RenderRect;
//const SDL_RenderDrawRectF = SDL_RenderRect;
//const SDL_RenderDrawRects = SDL_RenderRects;
//const SDL_RenderDrawRectsF = SDL_RenderRects;
//const SDL_RenderFillRectF = SDL_RenderFillRect;
//const SDL_RenderFillRectsF = SDL_RenderFillRects;
//const SDL_RenderFlush = SDL_FlushRenderer;
//const SDL_RenderGetClipRect = SDL_GetRenderClipRect;
//const SDL_RenderGetLogicalSize = SDL_GetRenderLogicalPresentation;
//const SDL_RenderGetMetalCommandEncoder = SDL_GetRenderMetalCommandEncoder;
//const SDL_RenderGetMetalLayer = SDL_GetRenderMetalLayer;
//const SDL_RenderGetScale = SDL_GetRenderScale;
//const SDL_RenderGetViewport = SDL_GetRenderViewport;
//const SDL_RenderGetWindow = SDL_GetRenderWindow;
//const SDL_RenderIsClipEnabled = SDL_RenderClipEnabled;
//const SDL_RenderLogicalToWindow = SDL_RenderCoordinatesToWindow;
//const SDL_RenderSetClipRect = SDL_SetRenderClipRect;
//const SDL_RenderSetLogicalSize = SDL_SetRenderLogicalPresentation;
//const SDL_RenderSetScale = SDL_SetRenderScale;
//const SDL_RenderSetVSync = SDL_SetRenderVSync;
//const SDL_RenderSetViewport = SDL_SetRenderViewport;
//const SDL_RenderWindowToLogical = SDL_RenderCoordinatesFromWindow;
//const SDL_ScaleModeBest = SDL_SCALEMODE_BEST;
//const SDL_ScaleModeLinear = SDL_SCALEMODE_LINEAR;
//const SDL_ScaleModeNearest = SDL_SCALEMODE_NEAREST;
//const RW_SEEK_CUR = SDL_RW_SEEK_CUR;
//const RW_SEEK_END = SDL_RW_SEEK_END;
//const RW_SEEK_SET = SDL_RW_SEEK_SET;
//const SDL_AllocRW = SDL_CreateRW;
//const SDL_FreeRW = SDL_DestroyRW;
//const SDL_ReadBE16 = SDL_ReadU16BE;
//const SDL_ReadBE32 = SDL_ReadU32BE;
//const SDL_ReadBE64 = SDL_ReadU64BE;
//const SDL_ReadLE16 = SDL_ReadU16LE;
//const SDL_ReadLE32 = SDL_ReadU32LE;
//const SDL_ReadLE64 = SDL_ReadU64LE;
//const SDL_WriteBE16 = SDL_WriteU16BE;
//const SDL_WriteBE32 = SDL_WriteU32BE;
//const SDL_WriteBE64 = SDL_WriteU64BE;
//const SDL_WriteLE16 = SDL_WriteU16LE;
//const SDL_WriteLE32 = SDL_WriteU32LE;
//const SDL_WriteLE64 = SDL_WriteU64LE;
//const SDL_SensorClose = SDL_CloseSensor;
//const SDL_SensorFromInstanceID = SDL_GetSensorFromInstanceID;
//const SDL_SensorGetData = SDL_GetSensorData;
//const SDL_SensorGetInstanceID = SDL_GetSensorInstanceID;
//const SDL_SensorGetName = SDL_GetSensorName;
//const SDL_SensorGetNonPortableType = SDL_GetSensorNonPortableType;
//const SDL_SensorGetType = SDL_GetSensorType;
//const SDL_SensorOpen = SDL_OpenSensor;
//const SDL_SensorUpdate = SDL_UpdateSensors;
//const SDL_strtokr = SDL_strtok_r;
//const SDL_FillRect = SDL_FillSurfaceRect;
//const SDL_FillRects = SDL_FillSurfaceRects;
//const SDL_FreeSurface = SDL_DestroySurface;
//const SDL_GetClipRect = SDL_GetSurfaceClipRect;
//const SDL_GetColorKey = SDL_GetSurfaceColorKey;
//const SDL_HasColorKey = SDL_SurfaceHasColorKey;
//const SDL_HasSurfaceRLE = SDL_SurfaceHasRLE;
//const SDL_LowerBlit = SDL_BlitSurfaceUnchecked;
//const SDL_LowerBlitScaled = SDL_BlitSurfaceUncheckedScaled;
//const SDL_SetClipRect = SDL_SetSurfaceClipRect;
//const SDL_SetColorKey = SDL_SetSurfaceColorKey;
//const SDL_UpperBlit = SDL_BlitSurface;
//const SDL_UpperBlitScaled = SDL_BlitSurfaceScaled;
//const SDL_TLSCleanup = SDL_CleanupTLS;
//const SDL_TLSCreate = SDL_CreateTLS;
//const SDL_TLSGet = SDL_GetTLS;
//const SDL_TLSSet = SDL_SetTLS;
//const SDL_threadID = SDL_ThreadID;
//const SDL_GetTicks64 = SDL_GetTicks;
//const SDL_GetClosestDisplayMode = SDL_GetClosestFullscreenDisplayMode;
//const SDL_GetDisplayOrientation = SDL_GetCurrentDisplayOrientation;
//const SDL_GetPointDisplayIndex = SDL_GetDisplayForPoint;
//const SDL_GetRectDisplayIndex = SDL_GetDisplayForRect;
//const SDL_GetWindowDisplayIndex = SDL_GetDisplayForWindow;
//const SDL_GetWindowDisplayMode = SDL_GetWindowFullscreenMode;
//const SDL_HasWindowSurface = SDL_WindowHasSurface;
//const SDL_IsScreenSaverEnabled = SDL_ScreenSaverEnabled;
//const SDL_SetWindowDisplayMode = SDL_SetWindowFullscreenMode;
//const SDL_WINDOW_ALLOW_HIGHDPI = SDL_WINDOW_HIGH_PIXEL_DENSITY;
//const SDL_WINDOW_INPUT_GRABBED = SDL_WINDOW_MOUSE_GRABBED;
//const SDL_WINDOW_SKIP_TASKBAR = SDL_WINDOW_UTILITY;
//const SDL_GameControllerMappingForDeviceIndex = SDL_GameControllerMappingForDeviceIndex_renamed_SDL_GetGamepadMappingForDeviceIndex;
//const SDL_pen_h_ = ;
//const SDL_PEN_INVALID = ((Uint32)0);
//const SDL_PEN_MOUSEID = ((Uint32)-2);
const SDL_PEN_INFO_UNKNOWN = (-1);
const SDL_PEN_AXIS_PRESSURE = 0;
const SDL_PEN_AXIS_XTILT = 0 + 1;
const SDL_PEN_AXIS_YTILT = 0 + 2;
const SDL_PEN_AXIS_DISTANCE = 0 + 3;
const SDL_PEN_AXIS_ROTATION = 0 + 4;
const SDL_PEN_AXIS_SLIDER = 0 + 5;
const SDL_PEN_NUM_AXES = 0 + 6;
//const SDL_PEN_AXIS_LAST = SDL_PEN_NUM_AXES - 1;
const SDL_PEN_FLAG_DOWN_BIT_INDEX = 13;
const SDL_PEN_FLAG_INK_BIT_INDEX = 14;
const SDL_PEN_FLAG_ERASER_BIT_INDEX = 15;
const SDL_PEN_FLAG_AXIS_BIT_OFFSET = 16;
//const SDL_PEN_CAPABILITY = (capbit) (1ul << (capbit));
//const SDL_PEN_AXIS_CAPABILITY = (axis) SDL_PEN_CAPABILITY((axis) + SDL_PEN_FLAG_AXIS_BIT_OFFSET);
const SDL_PEN_TIP_INK = SDL_PEN_FLAG_INK_BIT_INDEX;
const SDL_PEN_TIP_ERASER = SDL_PEN_FLAG_ERASER_BIT_INDEX;
//const SDL_PEN_DOWN_MASK = SDL_PEN_CAPABILITY(SDL_PEN_FLAG_DOWN_BIT_INDEX);
//const SDL_PEN_INK_MASK = SDL_PEN_CAPABILITY(SDL_PEN_FLAG_INK_BIT_INDEX);
//const SDL_PEN_ERASER_MASK = SDL_PEN_CAPABILITY(SDL_PEN_FLAG_ERASER_BIT_INDEX);
//const SDL_PEN_AXIS_PRESSURE_MASK = SDL_PEN_AXIS_CAPABILITY(SDL_PEN_AXIS_PRESSURE);
//const SDL_PEN_AXIS_XTILT_MASK = SDL_PEN_AXIS_CAPABILITY(SDL_PEN_AXIS_XTILT);
//const SDL_PEN_AXIS_YTILT_MASK = SDL_PEN_AXIS_CAPABILITY(SDL_PEN_AXIS_YTILT);
//const SDL_PEN_AXIS_DISTANCE_MASK = SDL_PEN_AXIS_CAPABILITY(SDL_PEN_AXIS_DISTANCE);
//const SDL_PEN_AXIS_ROTATION_MASK = SDL_PEN_AXIS_CAPABILITY(SDL_PEN_AXIS_ROTATION);
//const SDL_PEN_AXIS_SLIDER_MASK = SDL_PEN_AXIS_CAPABILITY(SDL_PEN_AXIS_SLIDER);
//const SDL_PEN_AXIS_BIDIRECTIONAL_MASKS = (SDL_PEN_AXIS_XTILT_MASK | SDL_PEN_AXIS_YTILT_MASK);
const SDL_PEN_TYPE_ERASER = 1;
const SDL_PEN_TYPE_PEN = 1 + 1;
const SDL_PEN_TYPE_PENCIL = 1 + 2;
const SDL_PEN_TYPE_BRUSH = 1 + 3;
const SDL_PEN_TYPE_AIRBRUSH = 1 + 4;
const SDL_PEN_TYPE_LAST = SDL_PEN_TYPE_AIRBRUSH;
//const SDL_pixels_h_ = ;
const SDL_ALPHA_OPAQUE = 255;
const SDL_ALPHA_TRANSPARENT = 0;
const SDL_PIXELTYPE_UNKNOWN = 0;
const SDL_PIXELTYPE_INDEX1 = 1;
const SDL_PIXELTYPE_INDEX4 = 2;
const SDL_PIXELTYPE_INDEX8 = 3;
const SDL_PIXELTYPE_PACKED8 = 4;
const SDL_PIXELTYPE_PACKED16 = 5;
const SDL_PIXELTYPE_PACKED32 = 6;
const SDL_PIXELTYPE_ARRAYU8 = 7;
const SDL_PIXELTYPE_ARRAYU16 = 8;
const SDL_PIXELTYPE_ARRAYU32 = 9;
const SDL_PIXELTYPE_ARRAYF16 = 10;
const SDL_PIXELTYPE_ARRAYF32 = 11;
const SDL_PIXELTYPE_INDEX2 = 12;
const SDL_BITMAPORDER_NONE = 0;
const SDL_BITMAPORDER_4321 = 1;
const SDL_BITMAPORDER_1234 = 2;
const SDL_PACKEDORDER_NONE = 0;
const SDL_PACKEDORDER_XRGB = 1;
const SDL_PACKEDORDER_RGBX = 2;
const SDL_PACKEDORDER_ARGB = 3;
const SDL_PACKEDORDER_RGBA = 4;
const SDL_PACKEDORDER_XBGR = 5;
const SDL_PACKEDORDER_BGRX = 6;
const SDL_PACKEDORDER_ABGR = 7;
const SDL_PACKEDORDER_BGRA = 8;
const SDL_ARRAYORDER_NONE = 0;
const SDL_ARRAYORDER_RGB = 1;
const SDL_ARRAYORDER_RGBA = 2;
const SDL_ARRAYORDER_ARGB = 3;
const SDL_ARRAYORDER_BGR = 4;
const SDL_ARRAYORDER_BGRA = 5;
const SDL_ARRAYORDER_ABGR = 6;
const SDL_PACKEDLAYOUT_NONE = 0;
const SDL_PACKEDLAYOUT_332 = 1;
const SDL_PACKEDLAYOUT_4444 = 2;
const SDL_PACKEDLAYOUT_1555 = 3;
const SDL_PACKEDLAYOUT_5551 = 4;
const SDL_PACKEDLAYOUT_565 = 5;
const SDL_PACKEDLAYOUT_8888 = 6;
const SDL_PACKEDLAYOUT_2101010 = 7;
const SDL_PACKEDLAYOUT_1010102 = 8;
//const SDL_DEFINE_PIXELFOURCC = (A, B, C, D) SDL_FOURCC(A, B, C, D);
//const SDL_DEFINE_PIXELFORMAT = (type, order, layout, bits, bytes) ((1 << 28) | ((type) << 24) | ((order) << 20) | ((layout) << 16) | ((bits) << 8) | ((bytes) << 0));
//const SDL_PIXELFLAG = (X) (((X) >> 28) & 0x0);
//const SDL_PIXELTYPE = (X) (((X) >> 24) & 0x0);
//const SDL_PIXELORDER = (X) (((X) >> 20) & 0x0);
//const SDL_PIXELLAYOUT = (X) (((X) >> 16) & 0x0);
//const SDL_BITSPERPIXEL = (X) (((X) >> 8) & 0xFF);
//const SDL_BYTESPERPIXEL = (X) (SDL_ISPIXELFORMAT_FOURCC(X) ? ((((X) == SDL_PIXELFORMAT_YUY2) || ((X) == SDL_PIXELFORMAT_UYVY) || ((X) == SDL_PIXELFORMAT_YVYU) || ((X) == SDL_PIXELFORMAT_P010) || ((X) == SDL_PIXELFORMAT_P016)) ? 2 : 1) : (((X) >> 0) & 0xFF));
//const SDL_ISPIXELFORMAT_INDEXED = (format) (!SDL_ISPIXELFORMAT_FOURCC(format) && ((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX1) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX2) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX4) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_INDEX8)));
//const SDL_ISPIXELFORMAT_PACKED = (format) (!SDL_ISPIXELFORMAT_FOURCC(format) && ((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED8) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED16) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED32)));
//const SDL_ISPIXELFORMAT_ARRAY = (format) (!SDL_ISPIXELFORMAT_FOURCC(format) && ((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU8) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU16) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYU32) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF16) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF32)));
//const SDL_ISPIXELFORMAT_ALPHA = (format) ((SDL_ISPIXELFORMAT_PACKED(format) && ((SDL_PIXELORDER(format) == SDL_PACKEDORDER_ARGB) || (SDL_PIXELORDER(format) == SDL_PACKEDORDER_RGBA) || (SDL_PIXELORDER(format) == SDL_PACKEDORDER_ABGR) || (SDL_PIXELORDER(format) == SDL_PACKEDORDER_BGRA))));
//const SDL_ISPIXELFORMAT_10BIT = (format) (!SDL_ISPIXELFORMAT_FOURCC(format) && ((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_PACKED32) && (SDL_PIXELLAYOUT(format) == SDL_PACKEDLAYOUT_2101010)));
//const SDL_ISPIXELFORMAT_FLOAT = (format) (!SDL_ISPIXELFORMAT_FOURCC(format) && ((SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF16) || (SDL_PIXELTYPE(format) == SDL_PIXELTYPE_ARRAYF32)));
//const SDL_ISPIXELFORMAT_FOURCC = (format) ((format) && (SDL_PIXELFLAG(format) != 1));
const SDL_PIXELFORMAT_UNKNOWN = 0;
//const SDL_PIXELFORMAT_INDEX1LSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX1, SDL_BITMAPORDER_4321, 0, 1, 0);
//const SDL_PIXELFORMAT_INDEX1MSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX1, SDL_BITMAPORDER_1234, 0, 1, 0);
//const SDL_PIXELFORMAT_INDEX2LSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX2, SDL_BITMAPORDER_4321, 0, 2, 0);
//const SDL_PIXELFORMAT_INDEX2MSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX2, SDL_BITMAPORDER_1234, 0, 2, 0);
//const SDL_PIXELFORMAT_INDEX4LSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX4, SDL_BITMAPORDER_4321, 0, 4, 0);
//const SDL_PIXELFORMAT_INDEX4MSB = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX4, SDL_BITMAPORDER_1234, 0, 4, 0);
//const SDL_PIXELFORMAT_INDEX8 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_INDEX8, 0, 0, 8, 1);
//const SDL_PIXELFORMAT_RGB332 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED8, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_332, 8, 1);
//const SDL_PIXELFORMAT_XRGB4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_4444, 12, 2);
//const SDL_PIXELFORMAT_RGB444 = SDL_PIXELFORMAT_XRGB4444;
//const SDL_PIXELFORMAT_XBGR4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_4444, 12, 2);
//const SDL_PIXELFORMAT_BGR444 = SDL_PIXELFORMAT_XBGR4444;
//const SDL_PIXELFORMAT_XRGB1555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_1555, 15, 2);
//const SDL_PIXELFORMAT_RGB555 = SDL_PIXELFORMAT_XRGB1555;
//const SDL_PIXELFORMAT_XBGR1555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_1555, 15, 2);
//const SDL_PIXELFORMAT_BGR555 = SDL_PIXELFORMAT_XBGR1555;
//const SDL_PIXELFORMAT_ARGB4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_4444, 16, 2);
//const SDL_PIXELFORMAT_RGBA4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_RGBA, SDL_PACKEDLAYOUT_4444, 16, 2);
//const SDL_PIXELFORMAT_ABGR4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_4444, 16, 2);
//const SDL_PIXELFORMAT_BGRA4444 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_BGRA, SDL_PACKEDLAYOUT_4444, 16, 2);
//const SDL_PIXELFORMAT_ARGB1555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_1555, 16, 2);
//const SDL_PIXELFORMAT_RGBA5551 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_RGBA, SDL_PACKEDLAYOUT_5551, 16, 2);
//const SDL_PIXELFORMAT_ABGR1555 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_1555, 16, 2);
//const SDL_PIXELFORMAT_BGRA5551 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_BGRA, SDL_PACKEDLAYOUT_5551, 16, 2);
//const SDL_PIXELFORMAT_RGB565 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_565, 16, 2);
//const SDL_PIXELFORMAT_BGR565 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED16, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_565, 16, 2);
//const SDL_PIXELFORMAT_RGB24 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU8, SDL_ARRAYORDER_RGB, 0, 24, 3);
//const SDL_PIXELFORMAT_BGR24 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU8, SDL_ARRAYORDER_BGR, 0, 24, 3);
//const SDL_PIXELFORMAT_XRGB8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_8888, 24, 4);
//const SDL_PIXELFORMAT_RGBX8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_RGBX, SDL_PACKEDLAYOUT_8888, 24, 4);
//const SDL_PIXELFORMAT_XBGR8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_8888, 24, 4);
//const SDL_PIXELFORMAT_BGRX8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_BGRX, SDL_PACKEDLAYOUT_8888, 24, 4);
//const SDL_PIXELFORMAT_ARGB8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_8888, 32, 4);
//const SDL_PIXELFORMAT_RGBA8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_RGBA, SDL_PACKEDLAYOUT_8888, 32, 4);
//const SDL_PIXELFORMAT_ABGR8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_8888, 32, 4);
//const SDL_PIXELFORMAT_BGRA8888 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_BGRA, SDL_PACKEDLAYOUT_8888, 32, 4);
//const SDL_PIXELFORMAT_XRGB2101010 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_XRGB, SDL_PACKEDLAYOUT_2101010, 32, 4);
//const SDL_PIXELFORMAT_XBGR2101010 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_XBGR, SDL_PACKEDLAYOUT_2101010, 32, 4);
//const SDL_PIXELFORMAT_ARGB2101010 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ARGB, SDL_PACKEDLAYOUT_2101010, 32, 4);
//const SDL_PIXELFORMAT_ABGR2101010 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_PACKED32, SDL_PACKEDORDER_ABGR, SDL_PACKEDLAYOUT_2101010, 32, 4);
//const SDL_PIXELFORMAT_RGB48 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU16, SDL_ARRAYORDER_RGB, 0, 48, 6);
//const SDL_PIXELFORMAT_BGR48 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU16, SDL_ARRAYORDER_BGR, 0, 48, 6);
//const SDL_PIXELFORMAT_RGBA64 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU16, SDL_ARRAYORDER_RGBA, 0, 64, 8);
//const SDL_PIXELFORMAT_ARGB64 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU16, SDL_ARRAYORDER_ARGB, 0, 64, 8);
//const SDL_PIXELFORMAT_BGRA64 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU16, SDL_ARRAYORDER_BGRA, 0, 64, 8);
//const SDL_PIXELFORMAT_ABGR64 = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYU16, SDL_ARRAYORDER_ABGR, 0, 64, 8);
//const SDL_PIXELFORMAT_RGB48_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF16, SDL_ARRAYORDER_RGB, 0, 48, 6);
//const SDL_PIXELFORMAT_BGR48_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF16, SDL_ARRAYORDER_BGR, 0, 48, 6);
//const SDL_PIXELFORMAT_RGBA64_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF16, SDL_ARRAYORDER_RGBA, 0, 64, 8);
//const SDL_PIXELFORMAT_ARGB64_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF16, SDL_ARRAYORDER_ARGB, 0, 64, 8);
//const SDL_PIXELFORMAT_BGRA64_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF16, SDL_ARRAYORDER_BGRA, 0, 64, 8);
//const SDL_PIXELFORMAT_ABGR64_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF16, SDL_ARRAYORDER_ABGR, 0, 64, 8);
//const SDL_PIXELFORMAT_RGB96_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF32, SDL_ARRAYORDER_RGB, 0, 96, 12);
//const SDL_PIXELFORMAT_BGR96_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF32, SDL_ARRAYORDER_BGR, 0, 96, 12);
//const SDL_PIXELFORMAT_RGBA128_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF32, SDL_ARRAYORDER_RGBA, 0, 128, 16);
//const SDL_PIXELFORMAT_ARGB128_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF32, SDL_ARRAYORDER_ARGB, 0, 128, 16);
//const SDL_PIXELFORMAT_BGRA128_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF32, SDL_ARRAYORDER_BGRA, 0, 128, 16);
//const SDL_PIXELFORMAT_ABGR128_FLOAT = SDL_DEFINE_PIXELFORMAT(SDL_PIXELTYPE_ARRAYF32, SDL_ARRAYORDER_ABGR, 0, 128, 16);
//const SDL_PIXELFORMAT_RGBA32 = SDL_PIXELFORMAT_RGBA8888;
//const SDL_PIXELFORMAT_ARGB32 = SDL_PIXELFORMAT_ARGB8888;
//const SDL_PIXELFORMAT_BGRA32 = SDL_PIXELFORMAT_BGRA8888;
//const SDL_PIXELFORMAT_ABGR32 = SDL_PIXELFORMAT_ABGR8888;
//const SDL_PIXELFORMAT_RGBX32 = SDL_PIXELFORMAT_RGBX8888;
//const SDL_PIXELFORMAT_XRGB32 = SDL_PIXELFORMAT_XRGB8888;
//const SDL_PIXELFORMAT_BGRX32 = SDL_PIXELFORMAT_BGRX8888;
//const SDL_PIXELFORMAT_XBGR32 = SDL_PIXELFORMAT_XBGR8888;
//const SDL_PIXELFORMAT_YV12 = SDL_DEFINE_PIXELFOURCC('Y', 'V', '1', '2');
//const SDL_PIXELFORMAT_IYUV = SDL_DEFINE_PIXELFOURCC('I', 'Y', 'U', 'V');
//const SDL_PIXELFORMAT_YUY2 = SDL_DEFINE_PIXELFOURCC('Y', 'U', 'Y', '2');
//const SDL_PIXELFORMAT_UYVY = SDL_DEFINE_PIXELFOURCC('U', 'Y', 'V', 'Y');
//const SDL_PIXELFORMAT_YVYU = SDL_DEFINE_PIXELFOURCC('Y', 'V', 'Y', 'U');
//const SDL_PIXELFORMAT_NV12 = SDL_DEFINE_PIXELFOURCC('N', 'V', '1', '2');
//const SDL_PIXELFORMAT_NV21 = SDL_DEFINE_PIXELFOURCC('N', 'V', '2', '1');
//const SDL_PIXELFORMAT_P010 = SDL_DEFINE_PIXELFOURCC('P', '0', '1', '0');
//const SDL_PIXELFORMAT_P016 = SDL_DEFINE_PIXELFOURCC('P', '0', '1', '6');
//const SDL_PIXELFORMAT_EXTERNAL_OES = SDL_DEFINE_PIXELFOURCC('O', 'E', 'S', ' ');
const SDL_COLOR_TYPE_UNKNOWN = 0;
const SDL_COLOR_TYPE_RGB = 1;
const SDL_COLOR_TYPE_YCBCR = 2;
const SDL_COLOR_RANGE_UNKNOWN = 0;
const SDL_COLOR_RANGE_LIMITED = 1;
const SDL_COLOR_RANGE_FULL = 2;
const SDL_COLOR_PRIMARIES_UNKNOWN = 0;
const SDL_COLOR_PRIMARIES_BT709 = 1;
const SDL_COLOR_PRIMARIES_UNSPECIFIED = 2;
const SDL_COLOR_PRIMARIES_BT470M = 4;
const SDL_COLOR_PRIMARIES_BT470BG = 5;
const SDL_COLOR_PRIMARIES_BT601 = 6;
const SDL_COLOR_PRIMARIES_SMPTE240 = 7;
const SDL_COLOR_PRIMARIES_GENERIC_FILM = 8;
const SDL_COLOR_PRIMARIES_BT2020 = 9;
const SDL_COLOR_PRIMARIES_XYZ = 10;
const SDL_COLOR_PRIMARIES_SMPTE431 = 11;
const SDL_COLOR_PRIMARIES_SMPTE432 = 12;
const SDL_COLOR_PRIMARIES_EBU3213 = 22;
const SDL_COLOR_PRIMARIES_CUSTOM = 31;
const SDL_TRANSFER_CHARACTERISTICS_UNKNOWN = 0;
const SDL_TRANSFER_CHARACTERISTICS_BT709 = 1;
const SDL_TRANSFER_CHARACTERISTICS_UNSPECIFIED = 2;
const SDL_TRANSFER_CHARACTERISTICS_GAMMA22 = 4;
const SDL_TRANSFER_CHARACTERISTICS_GAMMA28 = 5;
const SDL_TRANSFER_CHARACTERISTICS_BT601 = 6;
const SDL_TRANSFER_CHARACTERISTICS_SMPTE240 = 7;
const SDL_TRANSFER_CHARACTERISTICS_LINEAR = 8;
const SDL_TRANSFER_CHARACTERISTICS_LOG100 = 9;
const SDL_TRANSFER_CHARACTERISTICS_LOG100_SQRT10 = 10;
const SDL_TRANSFER_CHARACTERISTICS_IEC61966 = 11;
const SDL_TRANSFER_CHARACTERISTICS_BT1361 = 12;
const SDL_TRANSFER_CHARACTERISTICS_SRGB = 13;
const SDL_TRANSFER_CHARACTERISTICS_BT2020_10BIT = 14;
const SDL_TRANSFER_CHARACTERISTICS_BT2020_12BIT = 15;
const SDL_TRANSFER_CHARACTERISTICS_PQ = 16;
const SDL_TRANSFER_CHARACTERISTICS_SMPTE428 = 17;
const SDL_TRANSFER_CHARACTERISTICS_HLG = 18;
const SDL_TRANSFER_CHARACTERISTICS_CUSTOM = 31;
const SDL_MATRIX_COEFFICIENTS_IDENTITY = 0;
const SDL_MATRIX_COEFFICIENTS_BT709 = 1;
const SDL_MATRIX_COEFFICIENTS_UNSPECIFIED = 2;
const SDL_MATRIX_COEFFICIENTS_FCC = 4;
const SDL_MATRIX_COEFFICIENTS_BT470BG = 5;
const SDL_MATRIX_COEFFICIENTS_BT601 = 6;
const SDL_MATRIX_COEFFICIENTS_SMPTE240 = 7;
const SDL_MATRIX_COEFFICIENTS_YCGCO = 8;
const SDL_MATRIX_COEFFICIENTS_BT2020_NCL = 9;
const SDL_MATRIX_COEFFICIENTS_BT2020_CL = 10;
const SDL_MATRIX_COEFFICIENTS_SMPTE2085 = 11;
const SDL_MATRIX_COEFFICIENTS_CHROMA_DERIVED_NCL = 12;
const SDL_MATRIX_COEFFICIENTS_CHROMA_DERIVED_CL = 13;
const SDL_MATRIX_COEFFICIENTS_ICTCP = 14;
const SDL_MATRIX_COEFFICIENTS_CUSTOM = 31;
const SDL_CHROMA_LOCATION_NONE = 0;
const SDL_CHROMA_LOCATION_LEFT = 1;
const SDL_CHROMA_LOCATION_CENTER = 2;
const SDL_CHROMA_LOCATION_TOPLEFT = 3;
//const SDL_DEFINE_COLORSPACE = (type, range, primaries, transfer, matrix, chroma) (((Uint32)(type) << 28) | ((Uint32)(range) << 24) | ((Uint32)(chroma) << 20) | ((Uint32)(primaries) << 10) | ((Uint32)(transfer) << 5) | ((Uint32)(matrix) << 0));
//const SDL_COLORSPACETYPE = (X) (SDL_ColorType)(((X) >> 28) & 0x0);
//const SDL_COLORSPACERANGE = (X) (SDL_ColorRange)(((X) >> 24) & 0x0);
//const SDL_COLORSPACECHROMA = (X) (SDL_ChromaLocation)(((X) >> 20) & 0x0);
//const SDL_COLORSPACEPRIMARIES = (X) (SDL_ColorPrimaries)(((X) >> 10) & 0x1);
//const SDL_COLORSPACETRANSFER = (X) (SDL_TransferCharacteristics)(((X) >> 5) & 0x1);
//const SDL_COLORSPACEMATRIX = (X) (SDL_MatrixCoefficients)((X) & 0x1);
//const SDL_ISCOLORSPACE_YUV_BT601 = (X) (SDL_COLORSPACEMATRIX(X) == SDL_MATRIX_COEFFICIENTS_BT601 || SDL_COLORSPACEMATRIX(X) == SDL_MATRIX_COEFFICIENTS_BT470BG);
//const SDL_ISCOLORSPACE_YUV_BT709 = (X) (SDL_COLORSPACEMATRIX(X) == SDL_MATRIX_COEFFICIENTS_BT709);
//const SDL_ISCOLORSPACE_LIMITED_RANGE = (X) (SDL_COLORSPACERANGE(X) == SDL_COLOR_RANGE_LIMITED);
//const SDL_ISCOLORSPACE_FULL_RANGE = (X) (SDL_COLORSPACERANGE(X) == SDL_COLOR_RANGE_LIMITED);
const SDL_COLORSPACE_UNKNOWN = 0;
//const SDL_COLORSPACE_SRGB = SDL_DEFINE_COLORSPACE(SDL_COLOR_TYPE_RGB, SDL_COLOR_RANGE_FULL, SDL_COLOR_PRIMARIES_BT709, SDL_TRANSFER_CHARACTERISTICS_SRGB, SDL_MATRIX_COEFFICIENTS_UNSPECIFIED, SDL_CHROMA_LOCATION_NONE);
//const SDL_COLORSPACE_SCRGB = SDL_DEFINE_COLORSPACE(SDL_COLOR_TYPE_RGB, SDL_COLOR_RANGE_FULL, SDL_COLOR_PRIMARIES_BT709, SDL_TRANSFER_CHARACTERISTICS_LINEAR, SDL_MATRIX_COEFFICIENTS_UNSPECIFIED, SDL_CHROMA_LOCATION_NONE);
//const SDL_COLORSPACE_HDR10 = SDL_DEFINE_COLORSPACE(SDL_COLOR_TYPE_RGB, SDL_COLOR_RANGE_FULL, SDL_COLOR_PRIMARIES_BT2020, SDL_TRANSFER_CHARACTERISTICS_PQ, SDL_MATRIX_COEFFICIENTS_UNSPECIFIED, SDL_CHROMA_LOCATION_NONE);
//const SDL_COLORSPACE_JPEG = SDL_DEFINE_COLORSPACE(SDL_COLOR_TYPE_YCBCR, SDL_COLOR_RANGE_FULL, SDL_COLOR_PRIMARIES_BT709, SDL_TRANSFER_CHARACTERISTICS_BT601, SDL_MATRIX_COEFFICIENTS_BT601, SDL_CHROMA_LOCATION_NONE);
//const SDL_COLORSPACE_BT601_LIMITED = SDL_DEFINE_COLORSPACE(SDL_COLOR_TYPE_YCBCR, SDL_COLOR_RANGE_LIMITED, SDL_COLOR_PRIMARIES_BT601, SDL_TRANSFER_CHARACTERISTICS_BT601, SDL_MATRIX_COEFFICIENTS_BT601, SDL_CHROMA_LOCATION_LEFT);
//const SDL_COLORSPACE_BT601_FULL = SDL_DEFINE_COLORSPACE(SDL_COLOR_TYPE_YCBCR, SDL_COLOR_RANGE_FULL, SDL_COLOR_PRIMARIES_BT601, SDL_TRANSFER_CHARACTERISTICS_BT601, SDL_MATRIX_COEFFICIENTS_BT601, SDL_CHROMA_LOCATION_LEFT);
//const SDL_COLORSPACE_BT709_LIMITED = SDL_DEFINE_COLORSPACE(SDL_COLOR_TYPE_YCBCR, SDL_COLOR_RANGE_LIMITED, SDL_COLOR_PRIMARIES_BT709, SDL_TRANSFER_CHARACTERISTICS_BT709, SDL_MATRIX_COEFFICIENTS_BT709, SDL_CHROMA_LOCATION_LEFT);
//const SDL_COLORSPACE_BT709_FULL = SDL_DEFINE_COLORSPACE(SDL_COLOR_TYPE_YCBCR, SDL_COLOR_RANGE_FULL, SDL_COLOR_PRIMARIES_BT709, SDL_TRANSFER_CHARACTERISTICS_BT709, SDL_MATRIX_COEFFICIENTS_BT709, SDL_CHROMA_LOCATION_LEFT);
//const SDL_COLORSPACE_BT2020_LIMITED = SDL_DEFINE_COLORSPACE(SDL_COLOR_TYPE_YCBCR, SDL_COLOR_RANGE_LIMITED, SDL_COLOR_PRIMARIES_BT2020, SDL_TRANSFER_CHARACTERISTICS_PQ, SDL_MATRIX_COEFFICIENTS_BT2020_NCL, SDL_CHROMA_LOCATION_LEFT);
//const SDL_COLORSPACE_BT2020_FULL = SDL_DEFINE_COLORSPACE(SDL_COLOR_TYPE_YCBCR, SDL_COLOR_RANGE_FULL, SDL_COLOR_PRIMARIES_BT2020, SDL_TRANSFER_CHARACTERISTICS_PQ, SDL_MATRIX_COEFFICIENTS_BT2020_NCL, SDL_CHROMA_LOCATION_LEFT);
//const SDL_COLORSPACE_RGB_DEFAULT = SDL_COLORSPACE_SRGB;
//const SDL_COLORSPACE_YUV_DEFAULT = SDL_COLORSPACE_JPEG;
//const SDL_Colour = SDL_Color;
//const SDL_FColour = SDL_FColor;
//const SDL_platform_h_ = ;
//const SDL_platform_defines_h_ = ;
const SDL_PLATFORM_AIX = 1;
const SDL_PLATFORM_HAIKU = 1;
const SDL_PLATFORM_BSDI = 1;
const SDL_PLATFORM_FREEBSD = 1;
const SDL_PLATFORM_HPUX = 1;
const SDL_PLATFORM_IRIX = 1;
const SDL_PLATFORM_LINUX = 1;
const SDL_PLATFORM_ANDROID = 1;
const SDL_PLATFORM_NGAGE = 1;
const SDL_PLATFORM_UNIX = 1;
const SDL_PLATFORM_APPLE = 1;
const TARGET_OS_MACCATALYST = 0;
const TARGET_OS_IOS = 0;
const TARGET_OS_IPHONE = 0;
const TARGET_OS_TV = 0;
const TARGET_OS_SIMULATOR = 0;
const TARGET_OS_VISION = 0;
const SDL_PLATFORM_TVOS = 1;
const SDL_PLATFORM_VISIONOS = 1;
const SDL_PLATFORM_IOS = 1;
const SDL_PLATFORM_MACOS = 1;
const SDL_PLATFORM_EMSCRIPTEN = 1;
const SDL_PLATFORM_NETBSD = 1;
const SDL_PLATFORM_OPENBSD = 1;
const SDL_PLATFORM_OS2 = 1;
const SDL_PLATFORM_OSF = 1;
const SDL_PLATFORM_QNXNTO = 1;
const SDL_PLATFORM_RISCOS = 1;
const SDL_PLATFORM_SOLARIS = 1;
const SDL_PLATFORM_CYGWIN = 1;
const SDL_PLATFORM_WINDOWS = 1;
const HAVE_WINAPIFAMILY_H = 1;
//const WINAPI_FAMILY_WINRT = (!WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP));
//const SDL_WINAPI_FAMILY_PHONE = (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP);
const SDL_PLATFORM_WINRT = 1;
const SDL_PLATFORM_WINGDK = 1;
const SDL_PLATFORM_XBOXONE = 1;
const SDL_PLATFORM_XBOXSERIES = 1;
const SDL_PLATFORM_WIN32 = 1;
const SDL_PLATFORM_GDK = 1;
const SDL_PLATFORM_PSP = 1;
const SDL_PLATFORM_PS2 = 1;
const SDL_PLATFORM_VITA = 1;
const SDL_PLATFORM_3DS = 1;
//const SDL_power_h_ = ;
const SDL_POWERSTATE_UNKNOWN = 0;
const SDL_POWERSTATE_ON_BATTERY = 1;
const SDL_POWERSTATE_NO_BATTERY = 2;
const SDL_POWERSTATE_CHARGING = 3;
const SDL_POWERSTATE_CHARGED = 4;
//const SDL_properties_h_ = ;
const SDL_PROPERTY_TYPE_INVALID = 0;
const SDL_PROPERTY_TYPE_POINTER = 1;
const SDL_PROPERTY_TYPE_STRING = 2;
const SDL_PROPERTY_TYPE_NUMBER = 3;
const SDL_PROPERTY_TYPE_FLOAT = 4;
const SDL_PROPERTY_TYPE_BOOLEAN = 5;
//const SDL_quit_h_ = ;
//const SDL_QuitRequested = () (SDL_PumpEvents(), (SDL_PeepEvents(NULL,0,SDL_PEEKEVENT,SDL_EVENT_QUIT,SDL_EVENT_QUIT) > 0));
//const SDL_rect_h_ = ;
//const SDL_render_h_ = ;
const SDL_RENDERER_SOFTWARE = 0x00000001;
const SDL_RENDERER_ACCELERATED = 0x00000002;
const SDL_RENDERER_PRESENTVSYNC = 0x00000004;
const SDL_TEXTUREACCESS_STATIC = 0;
const SDL_TEXTUREACCESS_STREAMING = 1;
const SDL_TEXTUREACCESS_TARGET = 2;
const SDL_LOGICAL_PRESENTATION_DISABLED = 0;
const SDL_LOGICAL_PRESENTATION_STRETCH = 1;
const SDL_LOGICAL_PRESENTATION_LETTERBOX = 2;
const SDL_LOGICAL_PRESENTATION_OVERSCAN = 3;
const SDL_LOGICAL_PRESENTATION_INTEGER_SCALE = 4;
const SDL_PROP_RENDERER_CREATE_NAME_STRING = 'name';
const SDL_PROP_RENDERER_CREATE_WINDOW_POINTER = 'window';
const SDL_PROP_RENDERER_CREATE_SURFACE_POINTER = 'surface';
const SDL_PROP_RENDERER_CREATE_OUTPUT_COLORSPACE_NUMBER = 'output_colorspace';
const SDL_PROP_RENDERER_CREATE_PRESENT_VSYNC_BOOLEAN = 'present_vsync';
const SDL_PROP_RENDERER_NAME_STRING = 'SDL.renderer.name';
const SDL_PROP_RENDERER_WINDOW_POINTER = 'SDL.renderer.window';
const SDL_PROP_RENDERER_SURFACE_POINTER = 'SDL.renderer.surface';
const SDL_PROP_RENDERER_OUTPUT_COLORSPACE_NUMBER =
    'SDL.renderer.output_colorspace';
const SDL_PROP_RENDERER_D3D9_DEVICE_POINTER = 'SDL.renderer.d3d9.device';
const SDL_PROP_RENDERER_D3D11_DEVICE_POINTER = 'SDL.renderer.d3d11.device';
const SDL_PROP_RENDERER_D3D12_DEVICE_POINTER = 'SDL.renderer.d3d12.device';
const SDL_PROP_RENDERER_D3D12_COMMAND_QUEUE_POINTER =
    'SDL.renderer.d3d12.command_queue';
const SDL_PROP_TEXTURE_CREATE_COLORSPACE_NUMBER = 'colorspace';
const SDL_PROP_TEXTURE_CREATE_FORMAT_NUMBER = 'format';
const SDL_PROP_TEXTURE_CREATE_ACCESS_NUMBER = 'access';
const SDL_PROP_TEXTURE_CREATE_WIDTH_NUMBER = 'width';
const SDL_PROP_TEXTURE_CREATE_HEIGHT_NUMBER = 'height';
const SDL_PROP_TEXTURE_CREATE_D3D11_TEXTURE_POINTER = 'd3d11.texture';
const SDL_PROP_TEXTURE_CREATE_D3D11_TEXTURE_U_POINTER = 'd3d11.texture_u';
const SDL_PROP_TEXTURE_CREATE_D3D11_TEXTURE_V_POINTER = 'd3d11.texture_v';
const SDL_PROP_TEXTURE_CREATE_D3D12_TEXTURE_POINTER = 'd3d12.texture';
const SDL_PROP_TEXTURE_CREATE_D3D12_TEXTURE_U_POINTER = 'd3d12.texture_u';
const SDL_PROP_TEXTURE_CREATE_D3D12_TEXTURE_V_POINTER = 'd3d12.texture_v';
const SDL_PROP_TEXTURE_CREATE_METAL_PIXELBUFFER_POINTER = 'metal.pixelbuffer';
const SDL_PROP_TEXTURE_CREATE_OPENGL_TEXTURE_NUMBER = 'opengl.texture';
const SDL_PROP_TEXTURE_CREATE_OPENGL_TEXTURE_UV_NUMBER = 'opengl.texture_uv';
const SDL_PROP_TEXTURE_CREATE_OPENGL_TEXTURE_U_NUMBER = 'opengl.texture_u';
const SDL_PROP_TEXTURE_CREATE_OPENGL_TEXTURE_V_NUMBER = 'opengl.texture_v';
const SDL_PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_NUMBER = 'opengles2.texture';
const SDL_PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_UV_NUMBER =
    'opengles2.texture_uv';
const SDL_PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_U_NUMBER =
    'opengles2.texture_u';
const SDL_PROP_TEXTURE_CREATE_OPENGLES2_TEXTURE_V_NUMBER =
    'opengles2.texture_v';
const SDL_PROP_TEXTURE_COLORSPACE_NUMBER = 'SDL.texture.colorspace';
const SDL_PROP_TEXTURE_D3D11_TEXTURE_POINTER = 'SDL.texture.d3d11.texture';
const SDL_PROP_TEXTURE_D3D11_TEXTURE_U_POINTER = 'SDL.texture.d3d11.texture_u';
const SDL_PROP_TEXTURE_D3D11_TEXTURE_V_POINTER = 'SDL.texture.d3d11.texture_v';
const SDL_PROP_TEXTURE_D3D12_TEXTURE_POINTER = 'SDL.texture.d3d12.texture';
const SDL_PROP_TEXTURE_D3D12_TEXTURE_U_POINTER = 'SDL.texture.d3d12.texture_u';
const SDL_PROP_TEXTURE_D3D12_TEXTURE_V_POINTER = 'SDL.texture.d3d12.texture_v';
const SDL_PROP_TEXTURE_OPENGL_TEXTURE_NUMBER = 'SDL.texture.opengl.texture';
const SDL_PROP_TEXTURE_OPENGL_TEXTURE_UV_NUMBER =
    'SDL.texture.opengl.texture_uv';
const SDL_PROP_TEXTURE_OPENGL_TEXTURE_U_NUMBER = 'SDL.texture.opengl.texture_u';
const SDL_PROP_TEXTURE_OPENGL_TEXTURE_V_NUMBER = 'SDL.texture.opengl.texture_v';
const SDL_PROP_TEXTURE_OPENGL_TEXTURE_TARGET = 'SDL.texture.opengl.target';
const SDL_PROP_TEXTURE_OPENGL_TEX_W_FLOAT = 'SDL.texture.opengl.tex_w';
const SDL_PROP_TEXTURE_OPENGL_TEX_H_FLOAT = 'SDL.texture.opengl.tex_h';
const SDL_PROP_TEXTURE_OPENGLES2_TEXTURE_NUMBER =
    'SDL.texture.opengles2.texture';
const SDL_PROP_TEXTURE_OPENGLES2_TEXTURE_UV_NUMBER =
    'SDL.texture.opengles2.texture_uv';
const SDL_PROP_TEXTURE_OPENGLES2_TEXTURE_U_NUMBER =
    'SDL.texture.opengles2.texture_u';
const SDL_PROP_TEXTURE_OPENGLES2_TEXTURE_V_NUMBER =
    'SDL.texture.opengles2.texture_v';
const SDL_PROP_TEXTURE_OPENGLES2_TEXTURE_TARGET =
    'SDL.texture.opengles2.target';
//const SDL_revision_h_ = ;
//const SDL_REVISION = SDL_VENDOR_INFO;
//const SDL_rwops_h_ = ;
const SDL_RWOPS_UNKNOWN = 0;
const SDL_RWOPS_WINFILE = 1;
const SDL_RWOPS_STDFILE = 2;
const SDL_RWOPS_JNIFILE = 3;
const SDL_RWOPS_MEMORY = 4;
const SDL_RWOPS_MEMORY_RO = 5;
const SDL_RWOPS_STATUS_READY = 0;
const SDL_RWOPS_STATUS_ERROR = 1;
const SDL_RWOPS_STATUS_EOF = 2;
const SDL_RWOPS_STATUS_NOT_READY = 3;
const SDL_RWOPS_STATUS_READONLY = 4;
const SDL_RWOPS_STATUS_WRITEONLY = 5;
const SDL_RW_SEEK_SET = 0;
const SDL_RW_SEEK_CUR = 1;
const SDL_RW_SEEK_END = 2;
//const SDL_scancode_h_ = ;
const SDL_SCANCODE_UNKNOWN = 0;
const SDL_SCANCODE_A = 4;
const SDL_SCANCODE_B = 5;
const SDL_SCANCODE_C = 6;
const SDL_SCANCODE_D = 7;
const SDL_SCANCODE_E = 8;
const SDL_SCANCODE_F = 9;
const SDL_SCANCODE_G = 10;
const SDL_SCANCODE_H = 11;
const SDL_SCANCODE_I = 12;
const SDL_SCANCODE_J = 13;
const SDL_SCANCODE_K = 14;
const SDL_SCANCODE_L = 15;
const SDL_SCANCODE_M = 16;
const SDL_SCANCODE_N = 17;
const SDL_SCANCODE_O = 18;
const SDL_SCANCODE_P = 19;
const SDL_SCANCODE_Q = 20;
const SDL_SCANCODE_R = 21;
const SDL_SCANCODE_S = 22;
const SDL_SCANCODE_T = 23;
const SDL_SCANCODE_U = 24;
const SDL_SCANCODE_V = 25;
const SDL_SCANCODE_W = 26;
const SDL_SCANCODE_X = 27;
const SDL_SCANCODE_Y = 28;
const SDL_SCANCODE_Z = 29;
const SDL_SCANCODE_1 = 30;
const SDL_SCANCODE_2 = 31;
const SDL_SCANCODE_3 = 32;
const SDL_SCANCODE_4 = 33;
const SDL_SCANCODE_5 = 34;
const SDL_SCANCODE_6 = 35;
const SDL_SCANCODE_7 = 36;
const SDL_SCANCODE_8 = 37;
const SDL_SCANCODE_9 = 38;
const SDL_SCANCODE_0 = 39;
const SDL_SCANCODE_RETURN = 40;
const SDL_SCANCODE_ESCAPE = 41;
const SDL_SCANCODE_BACKSPACE = 42;
const SDL_SCANCODE_TAB = 43;
const SDL_SCANCODE_SPACE = 44;
const SDL_SCANCODE_MINUS = 45;
const SDL_SCANCODE_EQUALS = 46;
const SDL_SCANCODE_LEFTBRACKET = 47;
const SDL_SCANCODE_RIGHTBRACKET = 48;
const SDL_SCANCODE_BACKSLASH = 49;
const SDL_SCANCODE_NONUSHASH = 50;
const SDL_SCANCODE_SEMICOLON = 51;
const SDL_SCANCODE_APOSTROPHE = 52;
const SDL_SCANCODE_GRAVE = 53;
const SDL_SCANCODE_COMMA = 54;
const SDL_SCANCODE_PERIOD = 55;
const SDL_SCANCODE_SLASH = 56;
const SDL_SCANCODE_CAPSLOCK = 57;
const SDL_SCANCODE_F1 = 58;
const SDL_SCANCODE_F2 = 59;
const SDL_SCANCODE_F3 = 60;
const SDL_SCANCODE_F4 = 61;
const SDL_SCANCODE_F5 = 62;
const SDL_SCANCODE_F6 = 63;
const SDL_SCANCODE_F7 = 64;
const SDL_SCANCODE_F8 = 65;
const SDL_SCANCODE_F9 = 66;
const SDL_SCANCODE_F10 = 67;
const SDL_SCANCODE_F11 = 68;
const SDL_SCANCODE_F12 = 69;
const SDL_SCANCODE_PRINTSCREEN = 70;
const SDL_SCANCODE_SCROLLLOCK = 71;
const SDL_SCANCODE_PAUSE = 72;
const SDL_SCANCODE_INSERT = 73;
const SDL_SCANCODE_HOME = 74;
const SDL_SCANCODE_PAGEUP = 75;
const SDL_SCANCODE_DELETE = 76;
const SDL_SCANCODE_END = 77;
const SDL_SCANCODE_PAGEDOWN = 78;
const SDL_SCANCODE_RIGHT = 79;
const SDL_SCANCODE_LEFT = 80;
const SDL_SCANCODE_DOWN = 81;
const SDL_SCANCODE_UP = 82;
const SDL_SCANCODE_NUMLOCKCLEAR = 83;
const SDL_SCANCODE_KP_DIVIDE = 84;
const SDL_SCANCODE_KP_MULTIPLY = 85;
const SDL_SCANCODE_KP_MINUS = 86;
const SDL_SCANCODE_KP_PLUS = 87;
const SDL_SCANCODE_KP_ENTER = 88;
const SDL_SCANCODE_KP_1 = 89;
const SDL_SCANCODE_KP_2 = 90;
const SDL_SCANCODE_KP_3 = 91;
const SDL_SCANCODE_KP_4 = 92;
const SDL_SCANCODE_KP_5 = 93;
const SDL_SCANCODE_KP_6 = 94;
const SDL_SCANCODE_KP_7 = 95;
const SDL_SCANCODE_KP_8 = 96;
const SDL_SCANCODE_KP_9 = 97;
const SDL_SCANCODE_KP_0 = 98;
const SDL_SCANCODE_KP_PERIOD = 99;
const SDL_SCANCODE_NONUSBACKSLASH = 100;
const SDL_SCANCODE_APPLICATION = 101;
const SDL_SCANCODE_POWER = 102;
const SDL_SCANCODE_KP_EQUALS = 103;
const SDL_SCANCODE_F13 = 104;
const SDL_SCANCODE_F14 = 105;
const SDL_SCANCODE_F15 = 106;
const SDL_SCANCODE_F16 = 107;
const SDL_SCANCODE_F17 = 108;
const SDL_SCANCODE_F18 = 109;
const SDL_SCANCODE_F19 = 110;
const SDL_SCANCODE_F20 = 111;
const SDL_SCANCODE_F21 = 112;
const SDL_SCANCODE_F22 = 113;
const SDL_SCANCODE_F23 = 114;
const SDL_SCANCODE_F24 = 115;
const SDL_SCANCODE_EXECUTE = 116;
const SDL_SCANCODE_HELP = 117;
const SDL_SCANCODE_MENU = 118;
const SDL_SCANCODE_SELECT = 119;
const SDL_SCANCODE_STOP = 120;
const SDL_SCANCODE_AGAIN = 121;
const SDL_SCANCODE_UNDO = 122;
const SDL_SCANCODE_CUT = 123;
const SDL_SCANCODE_COPY = 124;
const SDL_SCANCODE_PASTE = 125;
const SDL_SCANCODE_FIND = 126;
const SDL_SCANCODE_MUTE = 127;
const SDL_SCANCODE_VOLUMEUP = 128;
const SDL_SCANCODE_VOLUMEDOWN = 129;
const SDL_SCANCODE_KP_COMMA = 133;
const SDL_SCANCODE_KP_EQUALSAS400 = 134;
const SDL_SCANCODE_INTERNATIONAL1 = 135;
const SDL_SCANCODE_INTERNATIONAL2 = 136;
const SDL_SCANCODE_INTERNATIONAL3 = 137;
const SDL_SCANCODE_INTERNATIONAL4 = 138;
const SDL_SCANCODE_INTERNATIONAL5 = 139;
const SDL_SCANCODE_INTERNATIONAL6 = 140;
const SDL_SCANCODE_INTERNATIONAL7 = 141;
const SDL_SCANCODE_INTERNATIONAL8 = 142;
const SDL_SCANCODE_INTERNATIONAL9 = 143;
const SDL_SCANCODE_LANG1 = 144;
const SDL_SCANCODE_LANG2 = 145;
const SDL_SCANCODE_LANG3 = 146;
const SDL_SCANCODE_LANG4 = 147;
const SDL_SCANCODE_LANG5 = 148;
const SDL_SCANCODE_LANG6 = 149;
const SDL_SCANCODE_LANG7 = 150;
const SDL_SCANCODE_LANG8 = 151;
const SDL_SCANCODE_LANG9 = 152;
const SDL_SCANCODE_ALTERASE = 153;
const SDL_SCANCODE_SYSREQ = 154;
const SDL_SCANCODE_CANCEL = 155;
const SDL_SCANCODE_CLEAR = 156;
const SDL_SCANCODE_PRIOR = 157;
const SDL_SCANCODE_RETURN2 = 158;
const SDL_SCANCODE_SEPARATOR = 159;
const SDL_SCANCODE_OUT = 160;
const SDL_SCANCODE_OPER = 161;
const SDL_SCANCODE_CLEARAGAIN = 162;
const SDL_SCANCODE_CRSEL = 163;
const SDL_SCANCODE_EXSEL = 164;
const SDL_SCANCODE_KP_00 = 176;
const SDL_SCANCODE_KP_000 = 177;
const SDL_SCANCODE_THOUSANDSSEPARATOR = 178;
const SDL_SCANCODE_DECIMALSEPARATOR = 179;
const SDL_SCANCODE_CURRENCYUNIT = 180;
const SDL_SCANCODE_CURRENCYSUBUNIT = 181;
const SDL_SCANCODE_KP_LEFTPAREN = 182;
const SDL_SCANCODE_KP_RIGHTPAREN = 183;
const SDL_SCANCODE_KP_LEFTBRACE = 184;
const SDL_SCANCODE_KP_RIGHTBRACE = 185;
const SDL_SCANCODE_KP_TAB = 186;
const SDL_SCANCODE_KP_BACKSPACE = 187;
const SDL_SCANCODE_KP_A = 188;
const SDL_SCANCODE_KP_B = 189;
const SDL_SCANCODE_KP_C = 190;
const SDL_SCANCODE_KP_D = 191;
const SDL_SCANCODE_KP_E = 192;
const SDL_SCANCODE_KP_F = 193;
const SDL_SCANCODE_KP_XOR = 194;
const SDL_SCANCODE_KP_POWER = 195;
const SDL_SCANCODE_KP_PERCENT = 196;
const SDL_SCANCODE_KP_LESS = 197;
const SDL_SCANCODE_KP_GREATER = 198;
const SDL_SCANCODE_KP_AMPERSAND = 199;
const SDL_SCANCODE_KP_DBLAMPERSAND = 200;
const SDL_SCANCODE_KP_VERTICALBAR = 201;
const SDL_SCANCODE_KP_DBLVERTICALBAR = 202;
const SDL_SCANCODE_KP_COLON = 203;
const SDL_SCANCODE_KP_HASH = 204;
const SDL_SCANCODE_KP_SPACE = 205;
const SDL_SCANCODE_KP_AT = 206;
const SDL_SCANCODE_KP_EXCLAM = 207;
const SDL_SCANCODE_KP_MEMSTORE = 208;
const SDL_SCANCODE_KP_MEMRECALL = 209;
const SDL_SCANCODE_KP_MEMCLEAR = 210;
const SDL_SCANCODE_KP_MEMADD = 211;
const SDL_SCANCODE_KP_MEMSUBTRACT = 212;
const SDL_SCANCODE_KP_MEMMULTIPLY = 213;
const SDL_SCANCODE_KP_MEMDIVIDE = 214;
const SDL_SCANCODE_KP_PLUSMINUS = 215;
const SDL_SCANCODE_KP_CLEAR = 216;
const SDL_SCANCODE_KP_CLEARENTRY = 217;
const SDL_SCANCODE_KP_BINARY = 218;
const SDL_SCANCODE_KP_OCTAL = 219;
const SDL_SCANCODE_KP_DECIMAL = 220;
const SDL_SCANCODE_KP_HEXADECIMAL = 221;
const SDL_SCANCODE_LCTRL = 224;
const SDL_SCANCODE_LSHIFT = 225;
const SDL_SCANCODE_LALT = 226;
const SDL_SCANCODE_LGUI = 227;
const SDL_SCANCODE_RCTRL = 228;
const SDL_SCANCODE_RSHIFT = 229;
const SDL_SCANCODE_RALT = 230;
const SDL_SCANCODE_RGUI = 231;
const SDL_SCANCODE_MODE = 257;
const SDL_SCANCODE_AUDIONEXT = 258;
const SDL_SCANCODE_AUDIOPREV = 259;
const SDL_SCANCODE_AUDIOSTOP = 260;
const SDL_SCANCODE_AUDIOPLAY = 261;
const SDL_SCANCODE_AUDIOMUTE = 262;
const SDL_SCANCODE_MEDIASELECT = 263;
const SDL_SCANCODE_WWW = 264;
const SDL_SCANCODE_MAIL = 265;
const SDL_SCANCODE_CALCULATOR = 266;
const SDL_SCANCODE_COMPUTER = 267;
const SDL_SCANCODE_AC_SEARCH = 268;
const SDL_SCANCODE_AC_HOME = 269;
const SDL_SCANCODE_AC_BACK = 270;
const SDL_SCANCODE_AC_FORWARD = 271;
const SDL_SCANCODE_AC_STOP = 272;
const SDL_SCANCODE_AC_REFRESH = 273;
const SDL_SCANCODE_AC_BOOKMARKS = 274;
const SDL_SCANCODE_BRIGHTNESSDOWN = 275;
const SDL_SCANCODE_BRIGHTNESSUP = 276;
const SDL_SCANCODE_DISPLAYSWITCH = 277;
const SDL_SCANCODE_KBDILLUMTOGGLE = 278;
const SDL_SCANCODE_KBDILLUMDOWN = 279;
const SDL_SCANCODE_KBDILLUMUP = 280;
const SDL_SCANCODE_EJECT = 281;
const SDL_SCANCODE_SLEEP = 282;
const SDL_SCANCODE_APP1 = 283;
const SDL_SCANCODE_APP2 = 284;
const SDL_SCANCODE_AUDIOREWIND = 285;
const SDL_SCANCODE_AUDIOFASTFORWARD = 286;
const SDL_SCANCODE_SOFTLEFT = 287;
const SDL_SCANCODE_SOFTRIGHT = 288;
const SDL_SCANCODE_CALL = 289;
const SDL_SCANCODE_ENDCALL = 290;
const SDL_NUM_SCANCODES = 512;
//const SDL_sensor_h_ = ;
const SDL_SENSOR_INVALID = -1;
const SDL_SENSOR_UNKNOWN = -1 + 1;
const SDL_SENSOR_ACCEL = -1 + 2;
const SDL_SENSOR_GYRO = -1 + 3;
const SDL_SENSOR_ACCEL_L = -1 + 4;
const SDL_SENSOR_GYRO_L = -1 + 5;
const SDL_SENSOR_ACCEL_R = -1 + 6;
const SDL_SENSOR_GYRO_R = -1 + 7;
const SDL_STANDARD_GRAVITY = 9.80665;
//const SDL_stdinc_h_ = ;
//const SDL_DISABLE_ALLOCA = ;
//const alloca = __builtin_alloca;
//const SDL_SIZE_MAX = SIZE_MAX;
//const SDL_HAS_BUILTIN = (x) __has_builtin(x);
//const SDL_arraysize = (array) (sizeof(array)/sizeof(array[0]));
//const SDL_TABLESIZE = (table) SDL_arraysize(table);
//const SDL_STRINGIFY_ARG = (arg) #arg;
//const SDL_reinterpret_cast = (type, expression) reinterpret_cast<type>(expression);
//const SDL_static_cast = (type, expression) static_cast<type>(expression);
//const SDL_const_cast = (type, expression) const_cast<type>(expression);
//const SDL_FOURCC = (A, B, C, D) ((SDL_static_cast(Uint32, SDL_static_cast(Uint8, (A))) << 0) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, (B))) << 8) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, (C))) << 16) | (SDL_static_cast(Uint32, SDL_static_cast(Uint8, (D))) << 24));
const SDL_FALSE = 0;
const SDL_TRUE = 1;
//const SDL_MAX_SINT8 = ((Sint8)0x7);
//const SDL_MIN_SINT8 = ((Sint8)(~0x7));
//const SDL_MAX_UINT8 = ((Uint8)0xFF);
//const SDL_MIN_UINT8 = ((Uint8)0x00);
//const SDL_MAX_SINT16 = ((Sint16)0x7FFF);
//const SDL_MIN_SINT16 = ((Sint16)(~0x7FFF));
//const SDL_MAX_UINT16 = ((Uint16)0xFFFF);
//const SDL_MIN_UINT16 = ((Uint16)0x0000);
//const SDL_MAX_SINT32 = ((Sint32)0x7FFFFFFF);
//const SDL_MIN_SINT32 = ((Sint32)(~0x7FFFFFFF));
//const SDL_MAX_UINT32 = ((Uint32)0xFFFFFFFF);
//const SDL_MIN_UINT32 = ((Uint32)0x00000000);
//const SDL_MAX_SINT64 = ((Sint64)0x7FFFFFFFFFFFFFFFll);
//const SDL_MIN_SINT64 = ((Sint64)(~0x7FFFFFFFFFFFFFFFll));
//const SDL_MAX_UINT64 = ((Uint64)0xFFFFFFFFFFFFFFFFull);
//const SDL_MIN_UINT64 = ((Uint64)(0x0000000000000000ull));
//const SDL_FLT_EPSILON = FLT_EPSILON;
//const SDL_PRIs64 = PRIs64;
//const SDL_PRIu64 = PRIu64;
//const SDL_PRIx64 = PRIx64;
//const SDL_PRIX64 = PRIX64;
//const SDL_PRIs32 = PRId32;
//const SDL_PRIu32 = PRIu32;
//const SDL_PRIx32 = PRIx32;
//const SDL_PRIX32 = PRIX32;
//const SDL_IN_BYTECAP = (x);
//const SDL_INOUT_Z_CAP = (x);
//const SDL_OUT_Z_CAP = (x);
//const SDL_OUT_CAP = (x);
//const SDL_OUT_BYTECAP = (x);
//const SDL_OUT_Z_BYTECAP = (x);
//const SDL_PRINTF_FORMAT_STRING = ;
//const SDL_SCANF_FORMAT_STRING = ;
//const SDL_PRINTF_VARARG_FUNC = ( fmtargnumber );
//const SDL_PRINTF_VARARG_FUNCV = ( fmtargnumber );
//const SDL_SCANF_VARARG_FUNC = ( fmtargnumber );
//const SDL_SCANF_VARARG_FUNCV = ( fmtargnumber );
//const SDL_WPRINTF_VARARG_FUNC = ( fmtargnumber );
//const SDL_WSCANF_VARARG_FUNC = ( fmtargnumber );
//const SDL_COMPILE_TIME_ASSERT = (name, x) static_assert(x, #x);
const DUMMY_ENUM_VALUE = 0;
//const SDL_stack_alloc = (type, count) (type*)alloca(sizeof(type)*(count));
//const SDL_stack_free = (data);
//const SDL_min = (x, y) (((x) < (y)) ? (x) : (y));
//const SDL_max = (x, y) (((x) > (y)) ? (x) : (y));
//const SDL_clamp = (x, a, b) (((x) < (a)) ? (a) : (((x) > (b)) ? (b) : (x)));
//const SDL_memcpy = memcpy;
//const SDL_copyp = (dst, src) { SDL_COMPILE_TIME_ASSERT(SDL_copyp, sizeof (*(dst)) == sizeof (*(src))); } SDL_memcpy((dst), (src), sizeof(*(src)));
//const SDL_memmove = memmove;
//const SDL_memset = memset;
//const SDL_zero = (x) SDL_memset(&(x), 0, sizeof((x)));
//const SDL_zerop = (x) SDL_memset((x), 0, sizeof(*(x)));
//const SDL_zeroa = (x) SDL_memset((x), 0, sizeof((x)));
const SDL_PI_D = 3.141592653589793238462643383279502884;
const SDL_PI_F = 3.141592653589793238462643383279502884;
//const SDL_ICONV_ERROR = (size_t)-1;
//const SDL_ICONV_E2BIG = (size_t)-2;
//const SDL_ICONV_EILSEQ = (size_t)-3;
//const SDL_ICONV_EINVAL = (size_t)-4;
//const SDL_iconv_utf8_locale = (S) SDL_iconv_string("", "UTF-8", S, SDL_strlen(S)+1);
//const SDL_iconv_utf8_ucs2 = (S) (Uint16 *)SDL_iconv_string("UCS-2", "UTF-8", S, SDL_strlen(S)+1);
//const SDL_iconv_utf8_ucs4 = (S) (Uint32 *)SDL_iconv_string("UCS-4", "UTF-8", S, SDL_strlen(S)+1);
//const SDL_iconv_wchar_utf8 = (S) SDL_iconv_string("UTF-8", "WCHAR_T", (char *)S, (SDL_wcslen(S)+1)*sizeof(wchar_t));
//const SDL_malloc = malloc;
//const SDL_calloc = calloc;
//const SDL_realloc = realloc;
//const SDL_free = free;
//const SDL_memcmp = memcmp;
//const SDL_strlcpy = strlcpy;
//const SDL_strlcat = strlcat;
//const SDL_strlen = strlen;
//const SDL_wcslen = wcslen;
//const SDL_wcslcpy = wcslcpy;
//const SDL_wcslcat = wcslcat;
//const SDL_strdup = strdup;
//const SDL_wcsdup = wcsdup;
//const SDL_strchr = strchr;
//const SDL_strrchr = strrchr;
//const SDL_strstr = strstr;
//const SDL_wcsstr = wcsstr;
//const SDL_strtok_r = strtok_r;
//const SDL_strcmp = strcmp;
//const SDL_wcscmp = wcscmp;
//const SDL_strncmp = strncmp;
//const SDL_wcsncmp = wcsncmp;
//const SDL_strcasecmp = strcasecmp;
//const SDL_strncasecmp = strncasecmp;
//const SDL_sscanf = sscanf;
//const SDL_vsscanf = vsscanf;
//const SDL_snprintf = snprintf;
//const SDL_vsnprintf = vsnprintf;
//const SDL_size_mul_overflow = (a, b, ret) (SDL_size_mul_overflow_builtin(a, b, ret));
//const SDL_size_add_overflow = (a, b, ret) (SDL_size_add_overflow_builtin(a, b, ret));
//const SDL_surface_h_ = ;
const SDL_SWSURFACE = 0;
const SDL_PREALLOC = 0x00000001;
const SDL_RLEACCEL = 0x00000002;
const SDL_DONTFREE = 0x00000004;
const SDL_SIMD_ALIGNED = 0x00000008;
const SDL_SURFACE_USES_PROPERTIES = 0x00000010;
//const SDL_MUSTLOCK = (S) (((S)->flags & SDL_RLEACCEL) != 0);
const SDL_SCALEMODE_NEAREST = 0;
const SDL_SCALEMODE_LINEAR = 1;
const SDL_SCALEMODE_BEST = 2;
const SDL_FLIP_NONE = 0;
const SDL_FLIP_HORIZONTAL = 1;
const SDL_FLIP_VERTICAL = 2;
const SDL_PROP_SURFACE_COLORSPACE_NUMBER = 'SDL.surface.colorspace';
const SDL_PROP_SURFACE_TONEMAP_OPERATOR_STRING = 'SDL.surface.tonemap';
//const SDL_system_h_ = ;
//const SDL_iOSSetAnimationCallback = (window, interval, callback, callbackParam) SDL_iPhoneSetAnimationCallback(window, interval, callback, callbackParam);
//const SDL_iOSSetEventPump = (enabled) SDL_iPhoneSetEventPump(enabled);
const SDL_ANDROID_EXTERNAL_STORAGE_READ = 0x01;
const SDL_ANDROID_EXTERNAL_STORAGE_WRITE = 0x02;
const SDL_WINRT_PATH_INSTALLED_LOCATION = 0;
const SDL_WINRT_PATH_LOCAL_FOLDER = 1;
const SDL_WINRT_PATH_ROAMING_FOLDER = 2;
const SDL_WINRT_PATH_TEMP_FOLDER = 3;
const SDL_WINRT_DEVICEFAMILY_UNKNOWN = 0;
const SDL_WINRT_DEVICEFAMILY_DESKTOP = 1;
const SDL_WINRT_DEVICEFAMILY_MOBILE = 2;
const SDL_WINRT_DEVICEFAMILY_XBOX = 3;
//const SDL_thread_h_ = ;
const SDL_THREAD_PRIORITY_LOW = 0;
const SDL_THREAD_PRIORITY_NORMAL = 1;
const SDL_THREAD_PRIORITY_HIGH = 2;
const SDL_THREAD_PRIORITY_TIME_CRITICAL = 3;
//const SDL_PASSED_BEGINTHREAD_ENDTHREAD = ;
//const SDL_beginthread = _beginthreadex;
//const SDL_endthread = _endthreadex;
//const SDL_CreateThread = (fn, name, data) SDL_CreateThread_REAL(fn, name, data, (pfnSDL_CurrentBeginThread)SDL_beginthread, (pfnSDL_CurrentEndThread)SDL_endthread);
//const SDL_CreateThreadWithStackSize = (fn, name, stacksize, data) SDL_CreateThreadWithStackSize_REAL(fn, name, stacksize, data, (pfnSDL_CurrentBeginThread)SDL_beginthread, (pfnSDL_CurrentEndThread)SDL_endthread);
//const SDL_timer_h_ = ;
const SDL_MS_PER_SECOND = 1000;
const SDL_US_PER_SECOND = 1000000;
//const SDL_NS_PER_SECOND = 1000000000LL;
const SDL_NS_PER_MS = 1000000;
const SDL_NS_PER_US = 1000;
//const SDL_MS_TO_NS = (MS) (((Uint64)(MS)) * SDL_NS_PER_MS);
//const SDL_NS_TO_MS = (NS) ((NS) / SDL_NS_PER_MS);
//const SDL_US_TO_NS = (US) (((Uint64)(US)) * SDL_NS_PER_US);
//const SDL_NS_TO_US = (NS) ((NS) / SDL_NS_PER_US);
//const SDL_touch_h_ = ;
const SDL_TOUCH_DEVICE_INVALID = -1;
const SDL_TOUCH_DEVICE_DIRECT = -1 + 1;
const SDL_TOUCH_DEVICE_INDIRECT_ABSOLUTE = -1 + 2;
const SDL_TOUCH_DEVICE_INDIRECT_RELATIVE = -1 + 3;
//const SDL_TOUCH_MOUSEID = ((Uint32)-1);
//const SDL_MOUSE_TOUCHID = ((Uint64)-1);
//const SDL_version_h_ = ;
const SDL_MAJOR_VERSION = 3;
const SDL_MINOR_VERSION = 0;
const SDL_PATCHLEVEL = 0;
//const SDL_VERSION = (x) { (x)->major = SDL_MAJOR_VERSION; (x)->minor = SDL_MINOR_VERSION; (x)->patch = SDL_PATCHLEVEL; };
//const SDL_VERSIONNUM = (X, Y, Z) ((X) << 24 | (Y) << 8 | (Z) << 0);
//const SDL_COMPILEDVERSION = SDL_VERSIONNUM(SDL_MAJOR_VERSION, SDL_MINOR_VERSION, SDL_PATCHLEVEL);
//const SDL_VERSION_ATLEAST = (X, Y, Z) (SDL_COMPILEDVERSION >= SDL_VERSIONNUM(X, Y, Z));
//const SDL_video_h_ = ;
const SDL_PROP_GLOBAL_VIDEO_WAYLAND_WL_DISPLAY_POINTER =
    'video.wayland.wl_display';
const SDL_SYSTEM_THEME_UNKNOWN = 0;
const SDL_SYSTEM_THEME_LIGHT = 1;
const SDL_SYSTEM_THEME_DARK = 2;
const SDL_ORIENTATION_UNKNOWN = 0;
const SDL_ORIENTATION_LANDSCAPE = 1;
const SDL_ORIENTATION_LANDSCAPE_FLIPPED = 2;
const SDL_ORIENTATION_PORTRAIT = 3;
const SDL_ORIENTATION_PORTRAIT_FLIPPED = 4;
const SDL_WINDOW_FULLSCREEN = 0x00000001;
const SDL_WINDOW_OPENGL = 0x00000002;
const SDL_WINDOW_OCCLUDED = 0x00000004;
const SDL_WINDOW_HIDDEN = 0x00000008;
const SDL_WINDOW_BORDERLESS = 0x00000010;
const SDL_WINDOW_RESIZABLE = 0x00000020;
const SDL_WINDOW_MINIMIZED = 0x00000040;
const SDL_WINDOW_MAXIMIZED = 0x00000080;
const SDL_WINDOW_MOUSE_GRABBED = 0x00000100;
const SDL_WINDOW_INPUT_FOCUS = 0x00000200;
const SDL_WINDOW_MOUSE_FOCUS = 0x00000400;
const SDL_WINDOW_EXTERNAL = 0x00000800;
const SDL_WINDOW_HIGH_PIXEL_DENSITY = 0x00002000;
const SDL_WINDOW_MOUSE_CAPTURE = 0x00004000;
const SDL_WINDOW_ALWAYS_ON_TOP = 0x00008000;
const SDL_WINDOW_UTILITY = 0x00020000;
const SDL_WINDOW_TOOLTIP = 0x00040000;
const SDL_WINDOW_POPUP_MENU = 0x00080000;
const SDL_WINDOW_KEYBOARD_GRABBED = 0x00100000;
const SDL_WINDOW_VULKAN = 0x10000000;
const SDL_WINDOW_METAL = 0x20000000;
const SDL_WINDOW_TRANSPARENT = 0x40000000;
const SDL_WINDOW_NOT_FOCUSABLE = 0x80000000;
const SDL_WINDOWPOS_UNDEFINED_MASK = 0x1FFF0000;
//const SDL_WINDOWPOS_UNDEFINED_DISPLAY = (X) (SDL_WINDOWPOS_UNDEFINED_MASK|(X));
//const SDL_WINDOWPOS_UNDEFINED = SDL_WINDOWPOS_UNDEFINED_DISPLAY(0);
//const SDL_WINDOWPOS_ISUNDEFINED = (X) (((X)&0xFFFF0000) == SDL_WINDOWPOS_UNDEFINED_MASK);
const SDL_WINDOWPOS_CENTERED_MASK = 0x2FFF0000;
//const SDL_WINDOWPOS_CENTERED_DISPLAY = (X) (SDL_WINDOWPOS_CENTERED_MASK|(X));
//const SDL_WINDOWPOS_CENTERED = SDL_WINDOWPOS_CENTERED_DISPLAY(0);
//const SDL_WINDOWPOS_ISCENTERED = (X) (((X)&0xFFFF0000) == SDL_WINDOWPOS_CENTERED_MASK);
const SDL_FLASH_CANCEL = 0;
const SDL_FLASH_BRIEFLY = 1;
const SDL_FLASH_UNTIL_FOCUSED = 2;
const SDL_GL_RED_SIZE = 0;
const SDL_GL_GREEN_SIZE = 1;
const SDL_GL_BLUE_SIZE = 2;
const SDL_GL_ALPHA_SIZE = 3;
const SDL_GL_BUFFER_SIZE = 4;
const SDL_GL_DOUBLEBUFFER = 5;
const SDL_GL_DEPTH_SIZE = 6;
const SDL_GL_STENCIL_SIZE = 7;
const SDL_GL_ACCUM_RED_SIZE = 8;
const SDL_GL_ACCUM_GREEN_SIZE = 9;
const SDL_GL_ACCUM_BLUE_SIZE = 10;
const SDL_GL_ACCUM_ALPHA_SIZE = 11;
const SDL_GL_STEREO = 12;
const SDL_GL_MULTISAMPLEBUFFERS = 13;
const SDL_GL_MULTISAMPLESAMPLES = 14;
const SDL_GL_ACCELERATED_VISUAL = 15;
const SDL_GL_RETAINED_BACKING = 16;
const SDL_GL_CONTEXT_MAJOR_VERSION = 17;
const SDL_GL_CONTEXT_MINOR_VERSION = 18;
const SDL_GL_CONTEXT_FLAGS = 19;
const SDL_GL_CONTEXT_PROFILE_MASK = 20;
const SDL_GL_SHARE_WITH_CURRENT_CONTEXT = 21;
const SDL_GL_FRAMEBUFFER_SRGB_CAPABLE = 22;
const SDL_GL_CONTEXT_RELEASE_BEHAVIOR = 23;
const SDL_GL_CONTEXT_RESET_NOTIFICATION = 24;
const SDL_GL_CONTEXT_NO_ERROR = 25;
const SDL_GL_FLOATBUFFERS = 26;
const SDL_GL_EGL_PLATFORM = 27;
const SDL_GL_CONTEXT_PROFILE_CORE = 0x0001;
const SDL_GL_CONTEXT_PROFILE_COMPATIBILITY = 0x0002;
const SDL_GL_CONTEXT_PROFILE_ES = 0x0004;
const SDL_GL_CONTEXT_DEBUG_FLAG = 0x0001;
const SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = 0x0002;
const SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG = 0x0004;
const SDL_GL_CONTEXT_RESET_ISOLATION_FLAG = 0x0008;
const SDL_GL_CONTEXT_RELEASE_BEHAVIOR_NONE = 0x0000;
const SDL_GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x0001;
const SDL_GL_CONTEXT_RESET_NO_NOTIFICATION = 0x0000;
const SDL_GL_CONTEXT_RESET_LOSE_CONTEXT = 0x0001;
const SDL_PROP_DISPLAY_HDR_ENABLED_BOOLEAN = 'SDL.display.HDR_enabled';
const SDL_PROP_DISPLAY_SDR_WHITE_LEVEL_FLOAT = 'SDL.display.SDR_white_level';
const SDL_PROP_WINDOW_CREATE_ALWAYS_ON_TOP_BOOLEAN = 'always-on-top';
const SDL_PROP_WINDOW_CREATE_BORDERLESS_BOOLEAN = 'borderless';
const SDL_PROP_WINDOW_CREATE_FOCUSABLE_BOOLEAN = 'focusable';
const SDL_PROP_WINDOW_CREATE_FULLSCREEN_BOOLEAN = 'fullscreen';
const SDL_PROP_WINDOW_CREATE_HEIGHT_NUMBER = 'height';
const SDL_PROP_WINDOW_CREATE_HIDDEN_BOOLEAN = 'hidden';
const SDL_PROP_WINDOW_CREATE_HIGH_PIXEL_DENSITY_BOOLEAN = 'high-pixel-density';
const SDL_PROP_WINDOW_CREATE_MAXIMIZED_BOOLEAN = 'maximized';
const SDL_PROP_WINDOW_CREATE_MENU_BOOLEAN = 'menu';
const SDL_PROP_WINDOW_CREATE_METAL_BOOLEAN = 'metal';
const SDL_PROP_WINDOW_CREATE_MINIMIZED_BOOLEAN = 'minimized';
const SDL_PROP_WINDOW_CREATE_MOUSE_GRABBED_BOOLEAN = 'mouse-grabbed';
const SDL_PROP_WINDOW_CREATE_OPENGL_BOOLEAN = 'opengl';
const SDL_PROP_WINDOW_CREATE_PARENT_POINTER = 'parent';
const SDL_PROP_WINDOW_CREATE_RESIZABLE_BOOLEAN = 'resizable';
const SDL_PROP_WINDOW_CREATE_TITLE_STRING = 'title';
const SDL_PROP_WINDOW_CREATE_TRANSPARENT_BOOLEAN = 'transparent';
const SDL_PROP_WINDOW_CREATE_TOOLTIP_BOOLEAN = 'tooltip';
const SDL_PROP_WINDOW_CREATE_UTILITY_BOOLEAN = 'utility';
const SDL_PROP_WINDOW_CREATE_VULKAN_BOOLEAN = 'vulkan';
const SDL_PROP_WINDOW_CREATE_WIDTH_NUMBER = 'width';
const SDL_PROP_WINDOW_CREATE_X_NUMBER = 'x';
const SDL_PROP_WINDOW_CREATE_Y_NUMBER = 'y';
const SDL_PROP_WINDOW_CREATE_COCOA_WINDOW_POINTER = 'cocoa.window';
const SDL_PROP_WINDOW_CREATE_COCOA_VIEW_POINTER = 'cocoa.view';
const SDL_PROP_WINDOW_CREATE_WAYLAND_SCALE_TO_DISPLAY =
    'wayland.scale_to_display';
const SDL_PROP_WINDOW_CREATE_WAYLAND_SURFACE_ROLE_CUSTOM_BOOLEAN =
    'wayland.surface_role_custom';
const SDL_PROP_WINDOW_CREATE_WAYLAND_CREATE_EGL_WINDOW_BOOLEAN =
    'wayland.create_egl_window';
const SDL_PROP_WINDOW_CREATE_WAYLAND_WL_SURFACE_POINTER = 'wayland.wl_surface';
const SDL_PROP_WINDOW_CREATE_WIN32_HWND_POINTER = 'win32.hwnd';
const SDL_PROP_WINDOW_CREATE_WIN32_PIXEL_FORMAT_HWND_POINTER =
    'win32.pixel_format_hwnd';
const SDL_PROP_WINDOW_CREATE_X11_WINDOW_NUMBER = 'x11.window';
const SDL_PROP_WINDOW_SHAPE_POINTER = 'SDL.window.shape';
const SDL_PROP_WINDOW_ANDROID_WINDOW_POINTER = 'SDL.window.android.window';
const SDL_PROP_WINDOW_ANDROID_SURFACE_POINTER = 'SDL.window.android.surface';
const SDL_PROP_WINDOW_UIKIT_WINDOW_POINTER = 'SDL.window.uikit.window';
const SDL_PROP_WINDOW_UIKIT_METAL_VIEW_TAG_NUMBER =
    'SDL.window.uikit.metal_view_tag';
const SDL_PROP_WINDOW_KMSDRM_DEVICE_INDEX_NUMBER =
    'SDL.window.kmsdrm.dev_index';
const SDL_PROP_WINDOW_KMSDRM_DRM_FD_NUMBER = 'SDL.window.kmsdrm.drm_fd';
const SDL_PROP_WINDOW_KMSDRM_GBM_DEVICE_POINTER = 'SDL.window.kmsdrm.gbm_dev';
const SDL_PROP_WINDOW_COCOA_WINDOW_POINTER = 'SDL.window.cocoa.window';
const SDL_PROP_WINDOW_COCOA_METAL_VIEW_TAG_NUMBER =
    'SDL.window.cocoa.metal_view_tag';
const SDL_PROP_WINDOW_VIVANTE_DISPLAY_POINTER = 'SDL.window.vivante.display';
const SDL_PROP_WINDOW_VIVANTE_WINDOW_POINTER = 'SDL.window.vivante.window';
const SDL_PROP_WINDOW_VIVANTE_SURFACE_POINTER = 'SDL.window.vivante.surface';
const SDL_PROP_WINDOW_WINRT_WINDOW_POINTER = 'SDL.window.winrt.window';
const SDL_PROP_WINDOW_WIN32_HWND_POINTER = 'SDL.window.win32.hwnd';
const SDL_PROP_WINDOW_WIN32_HDC_POINTER = 'SDL.window.win32.hdc';
const SDL_PROP_WINDOW_WIN32_INSTANCE_POINTER = 'SDL.window.win32.instance';
const SDL_PROP_WINDOW_WAYLAND_DISPLAY_POINTER = 'SDL.window.wayland.display';
const SDL_PROP_WINDOW_WAYLAND_SURFACE_POINTER = 'SDL.window.wayland.surface';
const SDL_PROP_WINDOW_WAYLAND_EGL_WINDOW_POINTER =
    'SDL.window.wayland.egl_window';
const SDL_PROP_WINDOW_WAYLAND_XDG_SURFACE_POINTER =
    'SDL.window.wayland.xdg_surface';
const SDL_PROP_WINDOW_WAYLAND_XDG_TOPLEVEL_POINTER =
    'SDL.window.wayland.xdg_toplevel';
const SDL_PROP_WINDOW_WAYLAND_XDG_POPUP_POINTER =
    'SDL.window.wayland.xdg_popup';
const SDL_PROP_WINDOW_WAYLAND_XDG_POSITIONER_POINTER =
    'SDL.window.wayland.xdg_positioner';
const SDL_PROP_WINDOW_X11_DISPLAY_POINTER = 'SDL.window.x11.display';
const SDL_PROP_WINDOW_X11_SCREEN_NUMBER = 'SDL.window.x11.screen';
const SDL_PROP_WINDOW_X11_WINDOW_NUMBER = 'SDL.window.x11.window';
const SDL_HITTEST_NORMAL = 0;
const SDL_HITTEST_DRAGGABLE = 1;
const SDL_HITTEST_RESIZE_TOPLEFT = 2;
const SDL_HITTEST_RESIZE_TOP = 3;
const SDL_HITTEST_RESIZE_TOPRIGHT = 4;
const SDL_HITTEST_RESIZE_RIGHT = 5;
const SDL_HITTEST_RESIZE_BOTTOMRIGHT = 6;
const SDL_HITTEST_RESIZE_BOTTOM = 7;
const SDL_HITTEST_RESIZE_BOTTOMLEFT = 8;
const SDL_HITTEST_RESIZE_LEFT = 9;
//const SDL_video_capture_h_ = ;
const SDL_VIDEO_CAPTURE_ALLOW_ANY_CHANGE = 1;
const SDL_VIDEO_CAPTURE_FAIL = -1;
const SDL_VIDEO_CAPTURE_INIT = 0;
const SDL_VIDEO_CAPTURE_STOPPED = 0 + 1;
const SDL_VIDEO_CAPTURE_PLAYING = 0 + 2;
//const SDL_vulkan_h_ = ;
//const NO_SDL_VULKAN_TYPEDEFS = ;
//const VK_DEFINE_HANDLE = (object) typedef struct object##_T* object;;
//const VK_DEFINE_NON_DISPATCHABLE_HANDLE = (object) typedef struct object##_T *object;;
